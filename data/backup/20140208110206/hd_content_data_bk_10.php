<?php if(!defined('HDPHP_PATH'))EXIT;
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('170','<p>&nbsp; &nbsp; 下面是2014年最新的世界编程语言排行榜，PHP总排行第六，但纵观排行榜，位列前五位的编程语言均为偏向于系统底层开发或者软件开发的，在web网站开发语言中，PHP稳居第一，是目前世界上公认的优秀web开发语言。</p><p><br/></p><p style=\"text-align: center;\"><img src=\"http://localhost/hdcms/upload/content/2014/01/14/70601389664317.jpg\" title=\"1389260256553.jpg\"/></p>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('171','<p>&nbsp; &nbsp; PHP是一门功能强大，而且比较易学，容易上手的编程语言，学习PHP是没有年龄限制的，中国古话说得好，活到老学到老，只要是你有一颗想学习的心并愿意为此付出努力，那么就一定可以学好的。而且，现在咨询这个问题认为自己年龄大的，一般也就是三四十岁，这个年纪正处于生活稳定期和事业的上升期，学一门新东西对自己以后的发展会有很大的好处。在后盾网的学员中，三四十岁年龄段的同学大有人在，年龄并没有对学习产生任何负面影响，关键还是看个人的心态。</p>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('172','<table width=\"970\" border=\"1\" class=\"lession_info\"><tbody><tr><td width=\"90\">课程名称</td><td width=\"160\">教学科目</td><td width=\"260\" style=\"text-align:left;padding-left:10px;\">详细内容</td><td width=\"200\">完成目标</td><td style=\"text-align:left;padding-left:10px;\">项目实例</td></tr><tr><td rowspan=\"2\">HTML</td><td>前端课程引言</td><td style=\"text-align:left;padding-left:10px;\">1.互联网概述<br/>2.什么是网站<br/>3.什么是网页<br/>4.构成网页的元素<br/>5.网站制作流程详解<br/>6.怎么样才能学好 拿高薪<br/>7.WEB前端开发职业的前途<br/>8.WEB前端开发课程及目标</td><td>了解学习课程安排和学习目标，进入紧张的学习状态。</td><td style=\"text-align:left;padding-left:10px;\">为自己制定学习目标和学习计划</td></tr><tr><td>HTML语法、标签讲解</td><td style=\"text-align:left;padding-left:10px;\">1.HTML是什么<br/>2.HTML特征<br/>3.HTML页面主体结构<br/>4.DOCTYPE文档声明<br/>5.HTML语法结构<br/>6.HTML标签特性<br/>7.对标签和单标签<br/>8.body元素中的标签<br/>9.头元素中的标签<br/>10.网页编码<br/>11.字体效果（font标签）<br/>12.超链接（a标签）<br/>13.锚文本链接（a标签）<br/>14.Pre标签<br/>15.HTML实体<br/>16.图像img标签<br/>17.图像地图<br/>18.常见图片格式讲解<br/>19.路径知识（绝对路径、相对路径）<br/>20.列表标签<br/>21.表格标签<br/>22.单行文本表单<br/>23.文本域标签<br/>24.单选按钮标签<br/>25.多选按钮标签<br/>26.下拉列表标签<br/>27.按钮标签<br/>28.文件域标签<br/>29.隐藏域标签<br/>30.Label标签<br/>31.marquee滚动标签<br/>32.html框架(帧窗口)技术<br/>33.Iframe标签<br/>34.插入多媒体</td><td>对web开发所需要的HTML知识有深刻认识，了解HTML作用与使用方法，熟练掌握各种html标签的用法及table布局的思路与方法</td><td style=\"text-align:left;padding-left:10px;\">1. 个人简历页面<br/>2. 用table方式布局百度首页<br/>3. 用锚链接技术制作小说阅读页面<br/>4. 用分帧技术布局织梦后台<br/>5. 用分帧技术布局猫扑大杂烩</td></tr><tr><td rowspan=\"3\">DIV+CSS</td><td>Div+css概念语法基础</td><td style=\"text-align:left;padding-left:10px;\">1. div+css概念<br/>2. css控制页面样式的方式<br/>3. div+css缺点<br/>4. div+css优点<br/>5. css选择器<br/>6. css继承性和叠加性<br/>7. 选择器优先级<br/>8. css注释<br/>9. 块元素和行内元素<br/>10. 行内块级元素<br/>11. 文档流<br/>12. css文字属性<br/>13. 文本段落</td><td>掌握div+css布局语法基础，了解css优势，并熟练掌握选择器的使用，为以后课程打下坚实的基础</td><td style=\"text-align:left;padding-left:10px;\">1. 利用不同选择器为页面元素加样式<br/>2. 制作文章内容页面并对文字进行样式美化操作</td></tr><tr><td>Div+CSS盒子模型</td><td style=\"text-align:left;padding-left:10px;\">1. 盒子模型<br/>2. 盒子实例讲解<br/>3. 盒子模型讲解（内边距）<br/>4. 盒子模型讲解（外边距）<br/>5. 盒子示意图示<br/>6. 盒子模型属性设置方式<br/>7. 填充和边距的常见问题<br/>8. 盒子模型的宽高属性<br/>9. 块元素和行元素的相互转换<br/>10. display属性<br/>11. overflow属性<br/>12. Border属性</td><td><p>盒子模型是css知识体系中非常重要的知识点，通过本阶段学习后，可以熟练掌握盒子模型的结构和用法。</p></td><td style=\"text-align:left;padding-left:10px;\">制作许愿墙页面</td></tr><tr><td><br/></td><td style=\"text-align:left;padding-left:10px;\">1. Float浮动属性<br/>2. 清除浮动<br/>3. Position定位属性-相对定位<br/>4. Position定位属性-绝对定位<br/>5. Position定位属性-固定定位<br/>6. Z-index层级属性<br/>7. background背景属性<br/>8. Css 精灵技术<br/>9. cursor鼠标样式属性<br/>10. overflow、display、visibility属性对比<br/>11. 限制元素的宽度和高度<br/>12. 透明度属性<br/>13. CSS命名规范<br/>14. Css常见bug<br/>15. CSS HACK（兼容性调试）</td><td>掌握用div+css进行页面布局的思想，熟练应用浮动、定位等知识对页面元素进行操作，达到能独立开发兼容性良好的大型复杂前端页面的能力。</td><td style=\"text-align:left;padding-left:10px;\">1. 赶集网首页（兼容各浏览器）<br/>2、天猫、淘宝、凡客、京东等大型电商网站首页（兼容各浏览器）</td></tr></tbody></table>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('178','<table width=\"970\" border=\"1\" class=\"lession_info\"><tbody><tr><td width=\"90\">课程名称</td><td width=\"160\">教学科目</td><td width=\"260\" style=\"text-align:left;padding-left:10px;\">详细内容</td><td width=\"200\">完成目标</td><td style=\"text-align:left;padding-left:10px;\">项目实例</td></tr><tr><td rowspan=\"19\">javascript</td><td>Javascript语法基础</td><td style=\"text-align:left;padding-left:10px;\">1. javascaript用来干什么<br/>2. javascript语法特点<br/>3. javascript的组成部分<br/>4. javascript难点<br/>5. 学习javascript准备工具<br/>6. javascrpt输出工具<br/>7. javascript放置引用<br/>8. 放置的时候注意事项<br/>9. javascript注释<br/>10. javascript命名规范<br/>11. javascript变量<br/>12. 声明变量注意的问题</td><td>对前端脚本JavaScript有个初步的认识。掌握基本JavaScript语法规范，掌握变量的使用及各种常规语句的使用方法。</td><td style=\"text-align:left;padding-left:10px;\">编写规范javascript代码，使用不同输出语句在页面中成功输出欢迎语句</td></tr><tr><td>Javascript变量类型</td><td style=\"text-align:left;padding-left:10px;\">1. 字符串类型（String）<br/>2. 数值类型（Numbeer）<br/>3. 未定义类型（Undefined）<br/>4. 空类型（NULL）<br/>5. 布尔型(Boolean)<br/>6. 数组类型（array）<br/>7. 对象类型（object）</td><td>掌握各种数据类型及其特点，了解不同类型数据的应用场景</td><td style=\"text-align:left;padding-left:10px;\">定义变量并存放不同类型的数据，查看不同类型数据返回数据类型的差别。</td></tr><tr><td>javascript运算符</td><td style=\"text-align:left;padding-left:10px;\">1. 算数运算符<br/>2. 关系运算符(比较运算符)<br/>3. 赋值运算符<br/>4. 逻辑运算符<br/>5. 一元运算符<br/>6. 三元运算符<br/>7. 特殊运算符</td><td>掌握不同运算符的应用方法并能熟练进行各类运算操作</td><td style=\"text-align:left;padding-left:10px;\">1. 使用不同运算符对存放不同类型数据的变量进行运算操作，实现常见的数学运算。<br/>2. 利用三元表达式编写“观影指南”功能</td></tr><tr><td>Javascript流程控制</td><td style=\"text-align:left;padding-left:10px;\">1. If分支选择结构<br/>2. Switch条件选择结构<br/>3. For循环结构<br/>4. While循环结构<br/>5. Do…while循环结构<br/>6. 循环结构中的跳转语句</td><td>掌握不同流程控制语句的特点及适用场景，掌握逻辑编程思想，熟练运用各类流程控制</td><td style=\"text-align:left;padding-left:10px;\">1. 利用流程控制语句制作人品测试页面<br/>2. 利用流程控制语句制作成绩分析页面<br/>3. 利用流程控制语句在页面中输出不同效果的“杨辉三角”</td></tr><tr><td>Javascript函数</td><td style=\"text-align:left;padding-left:10px;\">1. 函数概念<br/>2. 函数的声明方式(创建)<br/>3. 函数的调用方式<br/>4. 创建调用函数注意问题<br/>5. 带有参数的函数<br/>6. 函数的返回值<br/>7. 变量的作用域<br/>8. 回调函数<br/>9. 递归函数10. 闭包</td><td>掌握逻辑编程语言中的函数概念，理解函数在程序中的作用，熟练编写各类需求函数。</td><td style=\"text-align:left;padding-left:10px;\">1. 编写自定义表格函数<br/>2. 编写隔行换色表格</td></tr><tr><td>Javascript数据类型转换</td><td style=\"text-align:left;padding-left:10px;\">1. 转换成数值类型<br/>2. 转换成字符串类型<br/>3. 转换成布尔类型<br/>4. 将字符串转换为整型<br/>5. 转换为浮点型</td><td>掌握各类数据类型的相互转换，有助于解决程序编写过程中的各类数据处理问题。</td><td style=\"text-align:left;padding-left:10px;\">对不同类型数据进行转换并观察转换结果</td></tr><tr><td>Javascript数组</td><td style=\"text-align:left;padding-left:10px;\">1. 数组概念<br/>2. 声明(创建)数组<br/>3. 遍历数组的方式<br/>4. 访问(操作)数组<br/>5. 数组的维度<br/>6. 使用数组的注意事项</td><td>掌握数组的概念及使用，能熟练对一维以及多维数组进行操作</td><td style=\"text-align:left;padding-left:10px;\">1.创建一个班级同学姓名数组，并依次查看数组元素<br/>2.编写自定义运算程序页面</td></tr><tr><td>Javascript对象</td><td style=\"text-align:left;padding-left:10px;\">1. 对象的概念<br/>2. 创建(声明)对象<br/>3. 添加属性和方法<br/>4. 访问对象的属性和方法<br/>5. 销毁对象<br/>6. 垃圾回收机制<br/>7. 删除对象的属性<br/>8. 对象属性的遍历<br/>9. 对象的存储方式<br/>10. 用原生方法封装对象<br/>11. 用工厂函数方式封装对象<br/>12. 用构造函数方式封装对象<br/>13. 用原型模式封装对象<br/>14. 用混合方法封装对象<br/>15. 用原型方式继承对象<br/>16. 通过函数的方法对象冒充<br/>17. 对象的继承顺序</td><td>掌握对象的概念和面向对象编程思想，能熟练进行对象的创建及属性和方法操作</td><td style=\"text-align:left;padding-left:10px;\">1. 编写一个“手机”对象，并添加对应的属性和方法<br/>2. 编写一个“人”对象，并添加对应的属性和方法</td></tr><tr><td>Javascript数组对象</td><td style=\"text-align:left;padding-left:10px;\">1. Length属性<br/>2. 添加数组元素<br/>3. 万能删除数组元素<br/>4. 数组的转换<br/>5. 数组的分割<br/>6. 数组的连接</td><td>掌握javascript数组数据的添加、删除、替换、合并等操作，熟练对数组进行各类处理</td><td style=\"text-align:left;padding-left:10px;\">1. 编写删除数组重复元素的函数<br/>2. 编写对数组进行排序的函数</td></tr><tr><td>Javascript字符串对象</td><td style=\"text-align:left;padding-left:10px;\">1. Length属性<br/>2. 获取指定位置的字符<br/>3. 获取指定位置字符的unicode编码<br/>4. 查找字符串位置<br/>5. 替换字符串内容<br/>6. 字符串的截取<br/>7. 字符串与数组的转换<br/>8. 字符串大小写转换</td><td>掌握javascript字符串的获取长度、查找位置、替换字符等操作，熟练对字符串对象进行各类处理</td><td style=\"text-align:left;padding-left:10px;\">1. 获取字符串中所有指定字符的位置<br/>2. 对指定字符串进行按需截取操作</td></tr><tr><td>Javascript 数学对象</td><td style=\"text-align:left;padding-left:10px;\">1. 取绝对值<br/>2. 向下取整操作<br/>3. 向上取整操作<br/>4. 获取最大值<br/>5. 获取最小值<br/>6. 获取随机数</td><td>掌握对数值类型数据的各种数学操作，熟练运用到程序开发中</td><td style=\"text-align:left;padding-left:10px;\">1. 制作随机点名页面<br/>2. 制作随机抽奖页面<br/>3. 制作随机布局页面</td></tr><tr><td>Javascript BOM模型</td><td style=\"text-align:left;padding-left:10px;\">1. BOM模型概念<br/>2. 获取浏览器位置<br/>3. 获取浏览器尺寸<br/>4. 获取屏幕分辨率<br/>5. 设置浏览器状态栏文本<br/>6. 控制浏览器窗体移动<br/>7. 控制浏览器滚动条<br/>8. setInterval()定时器<br/>9. setTimeout()定时器<br/>10. 清除定时器<br/>11. Open()方法新建窗口<br/>12. history对象<br/>13. location对象</td><td>掌握bom模型概念，熟悉window对象的各种属性与方法，熟练使用定时器对程序进行定时操作。</td><td style=\"text-align:left;padding-left:10px;\">4. 制作自动滚动效果页面<br/>5. 编写窗口大小自动变化效果<br/>6. 实现随机更换网页背景效果<br/>7. 制作定时跳转页面<br/>8. 漂浮广告<br/>9. 网易右下角固定视频广告效果<br/>10. JS实现兼容浏览器的后台布局<br/>11. 搜狐网对联广告效果<br/>12. 百度贴吧头像选择器<br/>13. 中关村在线首页弹出广告效果</td></tr><tr><td>Javascript 事件</td><td style=\"text-align:left;padding-left:10px;\">1. 事件的概念<br/>2. 事件源的概念<br/>3. 事件对象的概念<br/>4. 事件处理程序的概念<br/>5. click鼠标事件<br/>6. dblclick鼠标事件<br/>7. mousedown鼠标事件<br/>8. mouseup鼠标事件<br/>9. mousemove鼠标事<br/>10. mouseover鼠标事件<br/>11. mouseout鼠标事件<br/>12. keyup键盘事<br/>13. keydown键盘事件<br/>14. keypress键盘事件<br/>15. submit表单事件<br/>16. blur表单事件<br/>17. focus表单事件<br/>18. change表单事件<br/>19. load页面事件<br/>20. resize页面事件<br/>21. 事件的绑定</td><td>掌握javascript各类事件的效果与应用，熟练利用事件知识编写各类动态网页效果</td><td style=\"text-align:left;padding-left:10px;\">1. 凡客首页图片轮换板<br/>2. 新浪微博输入框效果<br/>3. 制作随机颜色、随机字体点名系统<br/>4. 淘宝网多级导航菜单<br/>5. 凡客TAG面板实现<br/>6. 淘宝网滑动面板实现<br/>7. 制作带有弹出效果的二级导航条<br/>8. 制作图片无缝滚动效果<br/>9. 天猫(淘宝商城）主站多级导航<br/>10. 天猫（淘宝商城）图片轮换+焦点图效果</td></tr><tr><td>Javascript DOM模型、DOM节点</td><td style=\"text-align:left;padding-left:10px;\">1. DOM模型<br/>2. document对象<br/>3. getElementById()方法<br/>4. getElementsByTagName()方法 <br/>5.getElementsByName() 方法<br/>6. getElementsByClassName()方法<br/>7. 对内容、属性、样式的操作<br/>8. 节点<br/>9. 节点的属性操作<br/>10. 创建节点<br/>11. 追加节点<br/>12. 删除节点<br/>13. 替换节点<br/>14. 复制节点</td><td>DOM模型是javascript中的一个很重要的知识点，是对样式操作的基础，该阶段就是要数量掌握dom模型的原理，掌握获得元素的方法和节点的操作方法</td><td style=\"text-align:left;padding-left:10px;\">1. 获取页面中的表单并改变样式<br/>2. 改变页面中所有图片的样式<br/>3. 改变页面中所有a连接的样式<br/>4. 制作即时提交的留言板页面</td></tr><tr><td>Javascript 元素位置和尺寸</td><td style=\"text-align:left;padding-left:10px;\">1. 元素的位置属性<br/>2. 元素的尺寸属性<br/>3. 获得元素的位置<br/>4. 获得元素的滚动条位置</td><td>掌握获得元素位置和尺寸的方法，有助于我们更精确的控制元素</td><td style=\"text-align:left;padding-left:10px;\">获得页面中指定元素的高度和位置</td></tr><tr><td>Javascript 事件对象</td><td style=\"text-align:left;padding-left:10px;\">1. 事件对象概念<br/>2. 获取事件对象<br/>3. 获取浏览器的位置<br/>4. 获取事件源的位置<br/>5. 获得鼠标移入移出效果<br/>6. 获取键盘码<br/>7. 判断alt、shift、ctrl键是否被按下<br/>8. 检测事件类型<br/>9. 冒泡型事件流<br/>10. 捕获型事件流<br/>11. 阻止事件流<br/>12. 获得目标事件源的对象<br/>13. 阻止浏览器默认行为</td><td>掌握事件对象的属性和方法能帮助我们更好的开发绚丽的效果，让我们对事件操作更得心应手。</td><td style=\"text-align:left;padding-left:10px;\">1、开发基于javascript的打字游戏<br/>2、仿新浪微博输入框</td></tr><tr><td>Javascript日期对象</td><td style=\"text-align:left;padding-left:10px;\">1.格林尼治时间、国际协调时间<br/>2.创建日期对象<br/>3.获取日期对象信息<br/>4.设置日期对象信息</td><td>掌握javascript获取和设置时间属性的方法</td><td style=\"text-align:left;padding-left:10px;\">1. 团购倒计时效果<br/>2. 天猫秒杀计时效果</td></tr><tr><td>Javascript 正则表达式</td><td style=\"text-align:left;padding-left:10px;\">1. 正则表达式<br/>2. 创建正则表达式<br/>3. test方法<br/>4. exec方法<br/>5. 原子<br/>6. 元字符<br/>7. 原子表<br/>8. 原子分组<br/>9. 量词<br/>10. 贪婪和吝啬<br/>11. 匹配边界<br/>12. 模式修正符<br/>13. 字符串中用到正则的函数<br/>14. 字符串中用到正则的函数<br/>15. 字符串中用到正则的函数<br/>16. 正则示例</td><td>掌握正则表达式的原理和应用，每种编程语言都有正则表达式，它们的语法都是通用的，正则表达式可以帮我们做很多智能的工作，比如违法词过滤、批量替换等。</td><td style=\"text-align:left;padding-left:10px;\">1. 百度搜索关键字描红效果<br/>2. 万网实时非法信息过滤效果</td></tr><tr><td>Jquery</td><td style=\"text-align:left;padding-left:10px;\">1. Jquery是什么?<br/>2. Jquery特点<br/>3. Jquery的成就<br/>4. 我们如何讲解jQuery<br/>5. jquery事件对象<br/>6. jquery事件对象的属性</td><td>Jquery轻量级的Javascrīpt框架。通过Jquery框架，简化前端脚本开发，更方便地处理HTML documents、events、实现动画效果，并且方便地为网站提供AJAX交互，同时Jquery兼容各种浏览器。</td><td style=\"text-align:left;padding-left:10px;\">1. 制作漂浮广告图片效果页面<br/>2. 制作新闻列表批量删除效果<br/>3. 百度即时搜索效果<br/>4. 58同城三级地区联动菜单<br/>5. 新浪微博注册页面<br/>6. 新浪微博表情选择器<br/>7. 其他各类页面动态效果</td></tr></tbody></table>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('173','<table width=\"970\" border=\"1\" class=\"lession_info\"><tbody><tr><th width=\"110\">课程名称</th><th width=\"140\">教学科目</th><th width=\"260\" style=\"text-align:left;padding-left:10px;\">详细内容</th><th width=\"200\">完成目标</th><th style=\"text-align:left;padding-left:10px;\">课堂实例</th></tr><tr><th rowspan=\"3\">PHP基本语法</th><td>了解PHP</td><td style=\"text-align:left;padding-left:10px;\">1.   Php是什么，能做什么<br/>2.  PHP的优势与特点<br/>3.    PHP脚本执行方式<br/>4.    BS与CS结构</td><td>清楚的认识学习PHP在BS开发中扮演的角色</td><td style=\"text-align:left;padding-left:10px;\">掌握BS结构请求方式，<br/>及PHP扮演的角色</td></tr><tr><td>集成化WAMP服务器的安装</td><td style=\"text-align:left;padding-left:10px;\">1. WAMP运行环境部署安装<br/>2. 目录结构说明<br/>3.   服务器请求流程<br/>4.  APACHE与MYSQL及PHP之间的关系<br/>5.    成功请求PHP脚本所的流程</td><td>安全使用的集成化WAMP环境,清楚认识BS结构的运行流程</td><td style=\"text-align:left;padding-left:10px;\">安装部署PHP运行环境，成功输出Hello Word!</td></tr><tr><td>Php语法学习</td><td style=\"text-align:left;padding-left:10px;\">1.    PHP的标记风格<br/>2. 与Html混排<br/>3.  分号的作用及与JS的区别<br/>4. 空白和换行符特点<br/>5. PHP注释规则与注释规范</td><td>PHP语法是后台学习PHP高级技术与项目实战开发重要基础，尤其学习完JS后很容易将PHP语法与JS搞混，所以课程虽然简单但很重要</td><td style=\"text-align:left;padding-left:10px;\">1. 通过PHP语法打印出表格<br/>2. 正确书写PHP注释<br/>3. JS换行输出字符串</td></tr><tr><th rowspan=\"2\">变量与数据类型</th><td>变量与常量的声明与使用</td><td style=\"text-align:left;padding-left:10px;\">1. 正确定义PHP变量<br/>2.    变量的传值赋值与传址赋值<br/>3. 可变变量与应用场景<br/>4.    Php外部超全局变量<br/>5.   PHP预定义系统常量<br/>6.   变量检测与删除<br/>7.  常量的定义与检测<br/>8. 常量的使用场景<br/>9.  常量与变量的区别</td><td>变量和常量是我们在PHP开发中使用最多的知识，所以要清楚的认识变量与常量区别及不同的使用场景</td><td style=\"text-align:left;padding-left:10px;\">1. 定义常量保护脚本安全<br/>2. 通过全局<br/>3. 通过全局. 掌握用户请求与PHP脚本处理过程</td></tr><tr><td>数据类型</td><td style=\"text-align:left;padding-left:10px;\">1.  布尔型（boolean） <br/>2.    整型（integer）<br/>3.  浮点型（float） <br/>4.  字符串（string） <br/>5. 数组（array） <br/>6.   对象（object） <br/>7.  资源（resource）<br/>8. NULL<br/>9. PHP垃圾回收机制(Garbage Collector)</td><td>初步认识PHP提供的8种数据类型，与每种数据类型的判断、检测、转换处理，清楚的认识系统资源占用对我们系统运行的影响及垃圾处理方案</td><td style=\"text-align:left;padding-left:10px;\">1. 写出8种情况下系统隐藏转为boolean假的情况<br/>2. 收集用户表单，将不合法年龄转为0<br/>3. NULL与EMPTY的深入理解<br/>4. 了解变量在内容中的定义与卸载情况</td></tr><tr><th rowspan=\"2\">PHP运算符与流程控制</th><td>PHP运算符</td><td style=\"text-align:left;padding-left:10px;\">1. 算术运算符<br/>2.    递增/递减运算符<br/>3. 比较运算符<br/>4.    逻辑运算符<br/>5.    位运算符<br/>6. 三元表达式<br/>7.    赋值运算符<br/>8.    字符串连接运算符经</td><td>运算符是用来对数值和变量进行某种操作运算的符号。一般地说，运算符可以带有1个、2个和3个运算对象</td><td style=\"text-align:left;padding-left:10px;\">1. WEB计算器应用<br/>2. 根据不同用户性别，产生不同问候语<br/>3. 学生成绩打分应用</td></tr><tr><td>流程控制</td><td style=\"text-align:left;padding-left:10px;\">1.   if分支<br/>2. If...else..分支判断<br/>3.  Switc..case分支语句<br/>4.  While与do while循环语句<br/>5.   For循环语句<br/>6.  Break与continue的使用</td><td>流程控制是进行程序开发的灵魂，PHP程序根据不同的客户请求借助流程控制做出相应的处理</td><td style=\"text-align:left;padding-left:10px;\">1. 制作聊天机器人<br/>2. 输出100以内的偶数<br/>3. 输出隔行变色表格</td></tr><tr><th rowspan=\"3\">PHP函数式编程</th><td>函数定义</td><td style=\"text-align:left;padding-left:10px;\">1. 函数的概念与价格<br/>2. 用户自定义函数<br/>3.  函数返回值<br/>4.    Return 不只使用在函数中<br/>5.  函数检测</td><td>函数是我们编写可复用代码的基石，了解PHP函数语法的定义与注意事项，同时清楚划分PHP函数与JS函数定义使用上的区别</td><td style=\"text-align:left;padding-left:10px;\">1. 自定义函数打印杨辉三角<br/>2. 对数组进行冒泡排序</td></tr><tr><td>函数参数</td><td style=\"text-align:left;padding-left:10px;\">1.  形参与实参的定义与使用<br/>2.  变量的作用域及与JS作用域的异同<br/>3. global引用全局变量<br/>4. 参数的引用传递与传埴传递<br/>5. 通过函数获得可变数量的<br/>6.  内部函数，函数体内函数<br/>递归算法原理<br/>7.   static静态变量使用<br/>8. 使用PHP系统预定义函数</td><td>无论是面向对象编译还是函数式编程，函数的概念至关重要，通过本课学习了解函数的概念与使用技术，同时讲师结合实例讲解，让学生彻底弄明白函数使用技巧</td><td style=\"text-align:left;padding-left:10px;\">1. 编写网站配置文件处理函C()<br/>2.
创建PHP函数实现计算器<br/>3. 用递归实现阶乘<br/>4. 自动加载文件函数示例<br/>5. 系统加载文件运行时间统计</td></tr><tr><td>代码重用</td><td style=\"text-align:left;padding-left:10px;\">1. Include与require<br/>2.  include_once与require_once<br/>3.    设置系统加载文件的包含目录<br/>4.    set_include_path()与get_include_path()</td><td>无论写JS还是PHP脚本，开发人员一定要把复用贯穿始终，复用可以大大减少代码量，同时也可以让脚本运行更快，减少代码调试时间，增加开发效率。</td><td style=\"text-align:left;padding-left:10px;\">1. 模板文件包含示例，了解模板知识<br/>2. 公共函数库定义<br/>3. 更改PHP脚本默认加载目录</td></tr><tr><th>日期操作</th><td>日期与时间处理</td><td style=\"text-align:left;padding-left:10px;\">1.   了解与认识时区<br/>2.  修改php.ini改变时区<br/>3.    通过php脚本修改时区<br/>4.  理解unix时间戳的意义与表示范围<br/>5.    通过javascript的ui插件获得ISO标准时间 <br/>6.  Unix时间戳与iso标准时间相互转换<br/>7.  通过unix时间戳进行时间运算<br/>8.  灵活使用php提交时间处理函数</td><td>无论在商城项目或SNS项目或BBS应用中时间是我们梳理内容的最好方式，所以灵活的掌握PHP时间知识，熟练运用PHP时间处理函数是我们进行项目开发的重要环节</td><td style=\"text-align:left;padding-left:10px;\">1. 在新闻发布页面，通过JS的日历UI指定发布时间，提交到PHP脚本，并且转为UNIX时间戳<br/>2. 更改网站默认时区</td></tr><tr><th rowspan=\"2\">字符串与日期</th><td>数学运算</td><td style=\"text-align:left;padding-left:10px;\">1.   数值类型绝对值获取<br/>2.    向上与向下取整在页面分页中的使用详解<br/>3.   求最大与最小的数值<br/>4.    生成随机数在验证码中的实现<br/>5.    根据字节大小自动转换为相应的空间单位<br/>6.   图像RGB的16进制色值与十进制数间的相互转换</td><td>无论是简单的分页处理，还是复杂的微博应用，无论是在JAVASCRITP或者PHP数据运算是使用很频繁的知识</td><td style=\"text-align:left;padding-left:10px;\">1. 文章分页实现<br/>2. 通过PHP制作随机验证码<br/>3. 根据文件大小的字节数据转为相应的可实别单位<br/>4. 对拾色器中的颜色数据进行10进制转换</td></tr><tr><td>字符串操作</td><td style=\"text-align:left;padding-left:10px;\">1. 三种字符串定义操作<br/>2. 单双引号的异同<br/>3. PHP字符串转义处理<br/>4. 常用字符串处理函数<br/>5. 多种方式获得表单数据<br/>6. 字符串大小写转换<br/>7. 用户密码加密处理<br/>8. 字符串数组转换处理<br/>9. 区分字符集的字符串操作<br/>10. 字符串检索替换操作<br/>11. url解析处理<br/>12. PHP中URL编码处理<br/>13. 字符串实体操作<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>在PHP中大部分操作是对字符串的处理，通过本章的学习，学员可以熟练掌据PHP字符串处理</td><td style=\"text-align:left;padding-left:10px;\">1. 使用定界符创建字符串<br/>2. 创建表单接收用户数据<br/>3. 传递有特殊编码的url参数</td></tr><tr><th rowspan=\"3\">数组处理</th><td>数组基础</td><td style=\"text-align:left;padding-left:10px;\">1. 数组的应用场景<br/>2. 关联数组与索引数组<br/>3. 数组的赋值方式<br/>4. PHP的多维数组<br/>5. GET&amp;POST以数组形式传参 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>学习使用php数组，区分PHP数组与JavaScript数的区别。要求学生熟练掌握php数的定义与使用技巧</td><td style=\"text-align:left;padding-left:10px;\">1. 定义一维与多维数组<br/>2. 接收前台的GET与POST参传递</td></tr><tr><td>数组遍历</td><td style=\"text-align:left;padding-left:10px;\">1. 使用foreach操作<br/>2. 使用list...each操作<br/>3. 获得数组的键名与单元<br/>4. 数组指针的移动<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>在操作数据库时返回值基本上都使用数组类型，学员要熟练掌握各种遍历数组的方法</td><td style=\"text-align:left;padding-left:10px;\">1. 通过各种语言结构操作数组<br/>2. 创2维数，并使用foreach遍历至表格</td></tr><tr><td>数组操作函</td><td style=\"text-align:left;padding-left:10px;\">1. 数组元素统计<br/>2. 判断数组键与单元<br/>3. 数组元素的检索<br/>4. 数组元素的过滤<br/>5. 数组单元应用函数<br/>6. 将数组分配到符号表<br/>7. 数组的出栈与入栈<br/>8. 数组的键名与键值操作</td><td>要玩转数组这个数据类型，学员需掌握大量的数组操作函数，所以本章节，提供大量实例让学生掌握PHP数组的函数使用，做到真正的灵活运用</td><td style=\"text-align:left;padding-left:10px;\">1. 自动运前台提的数进行过滤<br/>2. 随更换页面CSS<br/>3. 判断文件类型是否合法<br/>4. 修改网站配置文件<br/>5. 递归实现更改数组键名大小写<br/>6. 
递归实现更改数组键值大小写<br/>7. 网站配置项的合并处理<br/>8. 分配变量到模板视图</td></tr><tr><th rowspan=\"2\">正则表达式</th><td>掌握正则语法</td><td style=\"text-align:left;padding-left:10px;\">1. 正则表达式是做什么的<br/>2. 定界符的使用方法<br/>3. 正则表达式的元字符<br/>4. 正则特殊字符转义处理<br/>5. 元字符表介绍<br/>6. 元字符组的使用<br/>7. 正则不保存模式使用<br/>8. 选择修释符<br/>9. 断言匹配模式<br/>10. 重复匹配与禁止贪婪<br/>11. 正则模式修正符<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>正则是主要是完成字符串或数组的CURD操作，通过本章的学习。学员达到非常灵活的正则表达式的操作。通过大量实例的讲解，让学员了解在实现开发中正则的应用场。</td><td style=\"text-align:left;padding-left:10px;\"><p>1. 通过正则实现模板引擎匹配功能<br/>2. 匹配手机号与固定电话号<br/>3. 匹配邮箱与网址<br/>4. 通过正则过滤非法关键字<br/>5. 通过正则实现搜索描红</p></td></tr><tr><td>正则函数操作</td><td style=\"text-align:left;padding-left:10px;\">1. 正则匹配操作函<br/>2. 匹配所有结果集<br/>3. 正则匹配数组<br/>4. 通过正则拆分字符串<br/>5. 正则的替换拆操作<br/>6. 回调函数实现正则</td><td>正则表达式基本上都需要宿主环境，PHP做为正则表达式的宿主环境，提供了大量、高效率的正则操作函数，不能掌握这些函数的用法，就不能很好的运用正则，所以本章就是对PHP正则函数的实例操作阶段。</td><td style=\"text-align:left;padding-left:10px;\">1. 替换所有文本中的超链接<br/>2. 去除站内外链 <br/>3. 网站采集模块功能的实现</td></tr><tr><th rowspan=\"2\">文件操作</th><td>目录CURD操作</td><td style=\"text-align:left;padding-left:10px;\">1. 获得磁盘总空间与可用空间<br/>2. 获得文件主文件名与目<br/>3. 检测文件或目录是否存在<br/>4. 检测目录与创建目录<br/>5. 
目录切换与删除操作<br/>6. 目录与文件重命名<br/>7. 遍历目录（多种方式)<br/>8. 打开目录连接句柄<br/>9. 读取目资源<br/>10. 操作目录指针<br/>11. 删除目录操作</td><td>无论是开发CMS,SHOP,BBS任何WEB应用，目录操作是不可避免要使用到的功能。所以学员必须牢固掌据PHP对目录的操作使用，包括目录的创建、删除、移动及权限判断等操作，本章主要学习这些功能的实现。</td><td style=\"text-align:left;padding-left:10px;\">1. 获得磁盘大小，并以可实别的单位显示<br/>2. 批量创建HDPHP框架目录结构，并验证目录权限<br/>3. 递归创建目录模块<br/>4. 递归删除目录模块<br/>5. 开发在线文件管理应用<br/>

 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td></tr><tr><td>PHP操作文件</td><td style=\"text-align:left;padding-left:10px;\">1. 判断文件的读写权限<br/>2. 打开文件资源<br/>3. 文件操作的不同模式<br/>4. 文件指针的操作<br/>5. 获得文件大小<br/>6. 文件内容的不同读取方式<br/>7. 文件复制操作<br/>8. 快速创建与获得文件内容<br/>9. 获得文件修改与访问时间<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>网站开发中，比如配置项修改，模板替换操作，文件缓存操作，编译文件片理等等，非常多的操作，我们都需要利用到文件，所以这是一个必须掌据的本领。当然本章也会结合大量实例讲解，让学员真正熟练的操作文件资源。</td><td style=\"text-align:left;padding-left:10px;\">1. 读取远程文件<br/>2. 创建网站配置文件操作<br/>3. 完善在线文件管理，实现在线文编辑操作<br/>4. 网站目录的复制与移动操作<br/>5. 文件缓存系统的实现<br/>6. 模板解析与编译模块功能</td></tr><tr><th rowspan=\"2\">上传与下载</th><td>文件上传</td><td style=\"text-align:left;padding-left:10px;\">1. 前台表单上传设置<br/>2. 表单设置上传大小<br/>3. php.ini配置项的上传设置<br/>4. 多文上传处理<br/>5. 多种上传错误讲解<br/>6. <br/>7. 常见的文档mime类型<br/>8. 
判断合法上传文件<br/>9. 移动上传文件<br/>10. 多文上传的表单设置<br/>

 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>在网站开发中无论是商品图片添加，用户头像添，附件资源上传，在线文件管理，这些我们都需要用到文件上传处理，本章通过实例教会学员掌握这项本领。</td><td style=\"text-align:left;padding-left:10px;\">1. 单一文件上传操作<br/>2. 过滤非法上传文件<br/>3. 上传超大文件<br/>4. 多个文件同时上传操作<br/>5. 开发方便的上传处理函数</td></tr><tr><td>文件下载</td><td style=\"text-align:left;padding-left:10px;\">1. 发送文档header头<br/>2. 设置下载窗口文件名<br/>3. 设置下载文件单位<br/>4. 设置下载文件大小<br/>5. 启动文件下载<br/>6. 下载积分实现策略</td><td>本章来学习PHP实现任意的文下载操作，同时讲解WEB应用中文下载权限的控制方法，以及下载积分的实现策略。</td><td style=\"text-align:left;padding-left:10px;\">1. 实现任何文件类型的下载操作<br/>2. 文件下载积分处理策略</td></tr></tbody></table>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('174','<table width=\"970\" border=\"1\" class=\"lession_info\"><tbody><tr><th width=\"110\">课程名称</th><th width=\"140\">教学科目</th><th width=\"260\" style=\"text-align:left;padding-left:10px;\">详细内容</th><th width=\"200\">完成目标</th><th style=\"text-align:left;padding-left:10px;\">课堂实例</th></tr><tr><th rowspan=\"3\">面向对象(OOP)</th><td>基础知识</td><td style=\"text-align:left;padding-left:10px;\">1. 面向对象概念<br/>2. 类clsss概念<br/>3. 对象句柄、属性、方法与对象生命周期<br/>4. 对象产生的步骤<br/>5. 对象内存的分布分析<br/>6. 对象的生命周期<br/>7. 面向对象的特性<br/><br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>通过本章的学习，学员要掌握什么是面向对象编程，为什么要使用面向对编程，以及面向对象编程的重要性与优越性。掌握PHP对象产生的流程，以及PHP的类与对象在内存中的分布形式。</td><td style=\"text-align:left;padding-left:10px;\">1. 学员阐述自己理解的现实生活中的面向对象概念<br/>2. 从本质上了解php面向对象内存分布<br/>3. 理解PHP面向对象的垃圾回收机质</td></tr><tr><td>对象关键字</td><td style=\"text-align:left;padding-left:10px;\">1. public、private、protected<br/>2. final、const<br/>3. static变量与static方法<br/>4. 对引用指针<br/>5. 本类的引用self::<br/>6. 父类的引parent:<br/>7. 抽象类与抽象方法<br/>8. 面向对象接口<br/>9.继承extends</td><td>这部分是对PHP面向对象基本语法学习，学员需要掌握每一个关键字的具体含义与使用方法，这样才可以顺利的进行后面的面向对象开发。</td><td style=\"text-align:left;padding-left:10px;\">1. 掌握PHP面向对象的封装意义与重要性<br/>2. PHP面向对象继承的精髓<br/>3. 静态属性与静态方法的使用场景<br/>4. 单例设计模式</td></tr><tr><td>方法与常量</td><td style=\"text-align:left;padding-left:10px;\">1. 构造方法__construct<br/>2. 析构方法__destruct()<br/>3. __CLASS__<br/>4. __METHOD__<br/>5. __FUNCTION__<br/>6. __DIR__<br/>7. __FILE__ <br/>8. __toString()<br/>9. __call()<br/>10. __isset()<br/>11. __get()<br/>12. __set()<br/>13.__autoload()<br/>14. get_class_methods()<br/>15. get_class_vars()<br/>16. call_user_func_array()<br/>17. get_object_vars()<br/>18. method_exists()<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>通过本章节的学习，老师结合具体实例讲解PHP面向对象众多的常量与魔术方法的使用 ，使学员深入了解面向对象的开发技巧</td><td style=\"text-align:left;padding-left:10px;\">1. 通过__autoload()实现类自加载机制<br/>2. __call、__isset、__get、__set等等魔术方法实例详解<br/>3. 解决子类与父类__construct()函数冲突</td></tr><tr><th>Ajax异步处理</th><td>Ajax处理介绍</td><td style=\"text-align:left;padding-left:10px;\">1. 同步请求与异步请求<br/>2. Ajax使用场景<br/>3. 创建兼容各流览器的XHR对象<br/>4. XMLHttpRequest状态<br/>5. Ajax事件处理<br/>6. 打开与发送请求<br/>7.XHR请求状态码<br/>8.设置Http请求头信息<br/>9. 发送Post数据<br/>10. Ajax接收数<br/>11. Jquery中使用Ajax</td><td>这部份学员清楚 Ajax是什么，什么时候使用Ajax。通过实例讲解让学生掌握Ajax的使用，以及创建属于自己的Ajax处理引擎</td><td style=\"text-align:left;padding-left:10px;\">1. 创建Ajax处理函数<br/>2. 编写与Jquery一样的Ajax处理对象<br/>3. 开发基于Ajax的网站留言本<br/>4. 实现Ajax的用户验证</td></tr><tr><th rowspan=\"3\">会话控制</th><td>基础知识</td><td style=\"text-align:left;padding-left:10px;\">1. Web请求流程<br/>2. Http特性<br/>3. 什么是http会话<br/>4. 请求头与响应头</td><td>这部分的学习，了解http是无状态的，学员要清楚无状态的好处与不便之处，以及学习PHP会话控制的重要性</td><td style=\"text-align:left;padding-left:10px;\">1. 详解WEB请求流程<br/>2. 通过工具让学生清楚看到请求状态<br/>3. 认识服务器是怎么知道客户端信息的<br/>4. 认识客户端是如何能正确解析服器返回的数据的</td></tr><tr><td>Cookie</td><td style=\"text-align:left;padding-left:10px;\">1. 什么是cookie<br/>2. cookie是通过http传递的<br/>3. cookie的会话周期<br/>4. 流临器处理cookie的方<br/>5. php创建cookie<br/>6. 超全局数组Array<br/>7. 设置cookie过期时间<br/>8. 设置cookie有效路径<br/>9. 设置cookie有效域<br/>10. 将数组与对象用cookie储存<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>cookie是常用的会话手段，虽然有储存容量与数据类型的限制，但也是开发中主要会话手段之一。通过这部分学习，了解会话cookie的使用方法与在什么地方用在cooke和什么地方不能使用cookie</td><td style=\"text-align:left;padding-left:10px;\">1. 通过cookie实现购物车模块<br/>2. 记录用户最近浏览的商品</td></tr><tr><td>Session</td><td style=\"text-align:left;padding-left:10px;\">1. session与cookie的区别<br/>2. 什么是session_id<br/>3. 什么是session_name<br/>4. 超全局数组Array<br/>5. session的内存释放与文件删除<br/>6. session_save_path设置<br/>7. session的cookie设置<br/>8. session的GC垃圾回收处理<br/>9. session的生命周期<br/>10. 引用计数器<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>session储存在服务器端，相比cookie来说，session没有储存大小与数据类型的限制，是弥补cookie缺点的很好的数据类型，</td><td style=\"text-align:left;padding-left:10px;\">1. 通过session保存用户登录状态<br/>2. 用户登录状态持久保存<br/>3. 自定义session储存位置<br/>4. 客户端禁止cookie或flash请求时的session处理<br/>5. 安全退出时的session处理</td></tr><tr><th rowspan=\"2\">图像处理</th><td>基础部分</td><td style=\"text-align:left;padding-left:10px;\">1. 检测GD库<br/>2. 设置header头信息<br/>3. 创建图像画布<br/>4. 设置图像颜色值 <br/>5. 图像填充处理<br/>6 绘制各种图形元素<br/>7. 在画布上写入文字<br/>8. 释放图像资源<br/>9. 打开外部图像<br/>10. 获得图像尺寸、颜色、通道信息<br/>11. 图像的复制操作<br/>12. 支持ttf字体的图像处理</td><td>网站视图显示是由图像与文构成的，图像处理是在网站开发中，经常使用到的功能。通过本章的学习，学员可以通过PHP程序进行任意的图像处理，应对以后工作中任何图像处理问题。</td><td style=\"text-align:left;padding-left:10px;\">1. 面向过程图形验证码功能<br/>2. 面向过程缩略图处理<br/>3. 面向过程图片水印功能</td></tr><tr><td>实例操作</td><td style=\"text-align:left;padding-left:10px;\">1. 验证码类的开发<br/>2. 图像水印处理类开发<br/>3. 图片缩略图处理类开发</td><td>本章节通过OOP思想开发各种图像处理类，使学生更加深刻的领会OOP面向对象编程的好处，同时通过实例让学员知道，图像处理在实际工作中的使用场景。</td><td style=\"text-align:left;padding-left:10px;\">1. OOP思想开发图形验证码类<br/>2. OOP思想开发水印处理类<br/>3. OOP思想开发缩略图处理类<br/>

 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td></tr><tr><th rowspan=\"2\">Smarty模板引擎</th><td>基础部分</td><td style=\"text-align:left;padding-left:10px;\">1. 模板引擎工作原理<br/>2. Smarty的特点<br/>3. Smarty模板引擎配置<br/>4. Smarty分配变量<br/>5. Smarty显示模板视图<br/>6. 变量调节器<br/>7. literal解决与Js冲突<br/>8. Smarty配置文件<br/>9. if条件函数<br/>10. foreach循环标签<br/>11. section循环标签<br/>12. include包含模板<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>Smarty是公认的高效模引擎。当然我们在开发中大部分使用PHP框架产品，很多框架产品都有模板引擎，而且可以很好的与框架相结合。也就是说，对有模板引擎的框架产品来说，Smarty并没有优势，但对于没有模板引擎的框架产品或其他开源项目来说，学习Smarty还是很有必要的，而且学员可以更深刻的掌握模板引擎的工作原理，对PHP技能的提高，很有帮助。</td><td style=\"text-align:left;padding-left:10px;\">1. 开发基于Smarty的留言本，使用Smarty基部分中的所有知识点</td></tr><tr><td>Smarty扩展提高</td><td style=\"text-align:left;padding-left:10px;\">1. 自定义变量调节器<br/>2. 自定义行标签(函数)<br/>3. 自定义块标签<br/>4. Smarty缓存处理<br/>5. Smarty局部缓存处理</td><td>Smarty提供了非常多的变量调节器，函数，块标签，但是在不同场景下并不能满足开发中的所有需求，所以本章是Smarty扩展部分，主要讲解变量调节器、函数、标签、缓存处理等Smarty高级功能。</td><td style=\"text-align:left;padding-left:10px;\">1. 创建类似织梦CMS的标签arclist<br/>2. 创建自动加载JS的Smarty行标签<br/>3. 创建自动加载Jquery的行标签<br/>4. 创建标题描红变量调节器</td></tr><tr><th rowspan=\"2\">错误与异常处理</th><td>PHP错误处理</td><td style=\"text-align:left;padding-left:10px;\">1. 什么是PHP错误<br/>2. 关闭PHP错误显示<br/>3. 报告简单的运行错误<br/>4. 报告除了通知性错误外的所有错误<br/>5. 报告所有PHP错误<br/>6. 通过PHP函数设置错误显示<br/>7. Deprecated错误<br/>8. Notice错误分析<br/>9. Warning警告错误分析<br/>10. Fatal致命错误分析<br/>11. Parse解析器错误分析<br/>12. 非语法错误分析<br/>13. 解决错误的简单手段<br/>14. 用户自定义错误处理<br/>15. 自定义记录错误的日志Log</td><td>写程序出错是肯定的，程员要有快速找到错误位置、出错原因的本领。本章节主要是学习如何灵活的控制PHP错误的显示与定义属于自己的PHP错误处理机制的手段及高效的错误Log记录机制。</td><td style=\"text-align:left;padding-left:10px;\">1. 修改php.ini更改PHP错误级别<br/>2. 开发自定义错误处理模块<br/>3. 开发网站Log日志处理类<br/>4. 网站错误处理与监控技巧</td></tr><tr><td>PHP异常处理</td><td style=\"text-align:left;padding-left:10px;\">1. PHP异常的特点<br/>2. 程序间的异常处理差异<br/>3. PHP异常处理详解<br/>4. 处理多个异常<br/>5. 自定义异常处理机制</td><td>PHP异常较其他程有很大不同，这也是很多学生对PHP异常感到无从使用的地方。这部分学员对PHP异常有更深刻的了解，同时创建高效的自定义异常处理类。</td><td style=\"text-align:left;padding-left:10px;\">1. 异常处理与捕获<br/>2. 处理多个异常的技巧<br/>3. 自定义高效的异常处理类</td></tr><tr><th rowspan=\"4\">Subversion<br/>版本控制</th><td>SVN安装与说明</td><td style=\"text-align:left;padding-left:10px;\">1. 什么是版本控制与为什么必须使用版本控制<br/>2. Subversion的安装<br/>3. 创建版本库目录<br/>4. 启动SVN服务器<br/>5. 将SVN加入系统服务<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td colspan=\"2\" rowspan=\"4\">版本控制透过文档控制（documentation control）记录程序各个模组的改动，并为每次改动编上序号。这种方法是工程图（engineering drawings）维护（maintenance）的标准做法。在开发中如果没有版本控制的保障，当出现问题时，那会是致命的灾难。所以这部分讲解版本控制软件Subversion的使用，同时后面的项目管理都使用Subversion来进行控制。</td></tr><tr><td>项目中使用SVN</td><td style=\"text-align:left;padding-left:10px;\">1. SVN配置文件说明<br/>2. 添加Svn帐号<br/>3. 设置Svn帐号权限<br/>4. SVN用户与角色<br/>5. SVN管理多个项目库<br/>6. TortoiseSVN<br/>7. 配置语言包<br/>8. 通过TortoiseSvn创建版本库<br/>9. 项目与版本库通信<br/>10. 提交文件到版本库<br/>11. 更新版本库<br/>12. 解决版本库冲突<br/>13. 删除操作<br/>14. 锁定与解锁操作<br/>15. 导出项目</td></tr><tr><td>Apache的SVN配置</td><td style=\"text-align:left;padding-left:10px;\">1. 加载函数库与模块<br/>2. 配置Apache配置文件<br/>3. 创建SVN帐号与密码<br/>4. 创建权限配置文件</td></tr><tr><td>使用Sourceforge</td><td style=\"text-align:left;padding-left:10px;\">1. 注册Sourceforge帐号<br/>2. 创建版本库<br/>3. 将本地代码使用Sourceforge进行托管</td></tr><tr><th rowspan=\"2\">XML</th><td>基础部分</td><td style=\"text-align:left;padding-left:10px;\">1. 可扩展标记语言XML<br/>2. XML与HTML<br/>3. XML语法规则<br/>4. XML命名规范<br/>5. XML的属性<br/>6. 创建XML文件<br/>7. XML模块内容<br/>8. CDATA模块<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td colspan=\"2\"><p>可扩展标记语言 (Extensible Markup Language, <em>XML</em>) ，用于标记电子文件使其具有结构性的标记语言，可以用来标记数据、定义数据类型。</p><p>这部分学员要了解什么是XML，在什么情况下使用XML，以及XML与JSON的异同点与使用场景。不员掌握XML语言的标签、属性并可以创建合法的XML文件。</p></td></tr><tr><td>PHP操作XML</td><td style=\"text-align:left;padding-left:10px;\">1. SimpleXML对象<br/>2. DOMDocument对象<br/>3. simplexml_load_string<br/>4. simplexml_load_file<br/>5. SimpleXML读取XML<br/>6. SimpleXML操作属性<br/>7. 读取节点内容<br/>8. Xpath操作<br/>9. DOMDocument读取节点<br/>10.DOMDocument读取标签<br/>11. DOMDocument读取属性<br/>12. DOMDocument创建XML文件<br/>13. DOMDocument移除节点<br/>14. 使用Jquery操作XML</td><td colspan=\"2\">这部分内容主要是通过实例讲解XML在实际开发中的使用场景以及PHP如操作XML这个数据储存结构语言。以及前台使用JQUERY怎样读取XML文件，让学员在使用XML文件时变得得心应手。</td></tr><tr><th rowspan=\"3\">Mysql<br/>数据库设计</th><td>数据库发展历史</td><td style=\"text-align:left;padding-left:10px;\">1. 计算机中的数据<br/>2. 阶层型数据库<br/>3. 网络型数据库<br/>4. 关系型数据库<br/>5. Mysql的特点<br/>6.Sql语言介绍<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td colspan=\"2\">这部分讲解为什么我在开发中使用数据库，对使用数据库的好处要有深刻的认识，明白使用数据库的重要性。了解Mysql数据库的特点，以及为什么要重多数据库产品中学习使用Mysql。了解sql语言的发展史，sql语言使用的广泛性以及sql语言的便捷性。</td></tr><tr><td>Mysql基本管理</td><td style=\"text-align:left;padding-left:10px;\">1. Mysql客户端与服务器端<br/>2. 启动与停止Mysql<br/>3. 连接Mysql<br/>4. Sql语言的4个部分 <br/>5. 创建数据库<br/>6. 数据库命名规范<br/>7. 改变当前使用数据库<br/>8. 安全的删除数据库<br/>9. 创建数据表<br/>10. 安全删据表<br/>11. 解决命令行不能输入中文BUG<br/>12. 复制表结构与表数据<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td colspan=\"2\">通过本章节实例授课内容（当然后盾网所有内都是实例贯穿）要求学生掌握数据库的基本使用，对数据库与数据表等Mysql有很好的理解，数据库创建、数据表创建等知识，虽然这很简单，但是也很重要。</td></tr><tr><td>整数类型与修饰关键字</td><td style=\"text-align:left;padding-left:10px;\">1. 整数类型<br/>2. 浮点数类型<br/>3. 字符串类型<br/>4. char与varchar类型区别<br/>5. 数据类型修改zerofill与unsigned<br/>6. text与blog类型详解<br/>7. enum与set类型详细处理<br/>8. set类型的4种处理方式<br/>9. 网站中常用类型使用<br/>10. default使用技巧<br/>11. unique实际开发中的使用方法<br/>12. 主键primary key 使用方法<br/>13. auto_increment自增使用技巧</td><td colspan=\"2\">Mysql储存不同的数据，要使用不同的数据类型。所以掌握Mysql的数据类型非常重要，这部分会对Mysql的各个数据类型进行详细的解释，什么数据使用什么数据类型，会讲解的非常清楚，这样以后学生在进行项目开发时进行表设计时就不会有任何问题。</td></tr><tr><th rowspan=\"2\">Mysql查询</th><td>Mysql基本查询</td><td style=\"text-align:left;padding-left:10px;\">1. SELECT基本使用<br/>2. As 别名关键字<br/>3. WHERE关键字<br/>4. AND 与 OR使用<br/>5. CONCAT函数使用<br/>6. DISTINCT使用方法<br/>7. IS NULL 与IS NOT NULL<br/>8. IF 与 IFNULL函数使用 <br/>9. ORDER BY 排序<br/>10. DESC与ASC<br/>11. LIMIT关键字使用<br/>12. BETWEEN..AND..<br/>13. IN(...)关键字使用<br/>14. 多种查找SET数据类型方法<br/>15. LIKE与NOT LIKE<br/>16. REGEXP正则的使用<br/>17. RAND随机函使用<br/>18. 直接在终端执行SQL语句</td><td colspan=\"2\">Mysql的查询很重要，也是使用Mysql数据库最常用的部分，当然这部分只是讲解Mysql查询的一部分，这部分老师会讲解大量实例，让学生真正使用Mysql数据库，为独立开发网站打好基础。</td></tr><tr><td>Mysql函数</td><td style=\"text-align:left;padding-left:10px;\">1. Mysql操作符<br/>2. Mysql中的Boolean类型<br/>3. COALESCE与GREATEST<br/>4. 逻辑运算符<br/>5. 流程控制<br/>6. 字符串处理函数<br/>7. 数学函数</td><td colspan=\"2\">这部分以Mysql编程角度出发，学习Mysql中的各种函数处理。了解掌握了这些函数后，对编写高效、优雅的SQL语句提供了保证。也为后面的储存过程、触发器开发打好基础。</td></tr><tr><th>字符集与校对规则</th><td>字符集设计</td><td style=\"text-align:left;padding-left:10px;\">1. 二进制与非二进制字符串<br/>2. 计算机处理字符集的过程<br/>3. 常用字符集选择<br/>4. 字符集与校对规则<br/>5. 字符集长度<br/>6. 校对规则实例详解<br/>7. 库、表、字段字符集</td><td colspan=\"2\">字符串是我们储存数据的最常用的数据类型，有字符串就有字符集（除了二进制类型），本节我们要学习怎样设计合理的字符集与校对规则，学员掌握了这样技能后，烦人的乱码问题，将不在出现了，所以这是很重要的，必经我们开发的大部分网站都是宽字节的。</td></tr><tr><th>Mysql 操作记录</th><td>Mysql增删改</td><td style=\"text-align:left;padding-left:10px;\">1. 严格模式与宽松模式<br/>2. INSERT插入数据<br/>3. UPDATE更新数据<br/>4. DELETE删除数据<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td colspan=\"2\">记住，全部实例贯穿始终，实例太多，不便一一列出。但是可以保证让学生都能学得会，都能学得好。这部分就是讲解数据的增加、删除、插入操作。</td></tr><tr><th>修改表结构</th><td>更改表结构</td><td style=\"text-align:left;padding-left:10px;\">1. 修改表名<br/>2. 修改表字段<br/>3. 修改表主键<br/>4. 修改表字符集</td><td colspan=\"2\">开发过程中，创建完表结构后，少不了对表与字段的二次修改。所以学员要掌握这项本领，来应对开发中的表结构修改本领。</td></tr><tr><th rowspan=\"2\">日期与时间</th><td>日期类型</td><td style=\"text-align:left;padding-left:10px;\">1. 日期与时间数据类型<br/>2. 选择日期类型的原则<br/>3. timestamp的使用方法<br/>4. 获得当前日期与时间<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td colspan=\"2\">int(10)不是万能的，所以我们要掌握Mysql操作日期与时间类型的本领，老师会以考勤模块等实例向学生讲解Mysql的日期与时间数据类型的使用</td></tr><tr><td>函数实例</td><td style=\"text-align:left;padding-left:10px;\">1. str_to_date()<br/>2. date_format()<br/>3. time_format()<br/>4. unix_timestamp()<br/>5. interval +(-) num unit<br/>6. date_add() date_sub()<br/>7. datediff()<br/>8. Timestampdiff()</td><td colspan=\"2\">要操作Mysql日期与时间类型，不会使用函数是不行的，这里只列出了少量函数，讲师会在课堂上给学生讲解更多实例，新奇的Mysql日期处理函数，记住以实例贯穿始终。</td></tr><tr><th>分组与统计</th><td>实例知识</td><td style=\"text-align:left;padding-left:10px;\">1. count()<br/>2. min() max avg() sum()<br/>3. group by 分组<br/>4. having 分组筛选</td><td colspan=\"2\">在网站的开发中，无论是分类文章的汇总还是求商品价格的平均值，都是分组与统计的工作场景，所以这部分通过大量实例教会学员，分组与统计的使用技巧。</td></tr><tr><th rowspan=\"2\">MySQL多表操作</th><td>基础部分</td><td style=\"text-align:left;padding-left:10px;\">1. 多表查询使用场景<br/>2. 一对一表关系分析<br/>3. 一对多表关系分析<br/>4. 多对多表关系分析<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td colspan=\"2\">Mysql是关系型数据库，优点就是多表的关联关系。这部分主要让学生了解表与表之间的各种关联关系，讲师会通过生动的现实生活中的各种关联关系让学生真真正正搞懂各种关系，也要清楚在开始进行表设计时，应该注意到的问题。</td></tr><tr><td>实例操作</td><td style=\"text-align:left;padding-left:10px;\">1. 笛卡尔基<br/>2. 内部连接操作<br/>3. 外问连接操作<br/>4. 自连接操作<br/>5. 多表实例操作</td><td colspan=\"2\">这部分就讲师会通过大量实例讲解，每一个实例讲师都会手把手的教会每一个同学（小班授课的好处），最终让学生达到，哦！多表关联是很简单的。</td></tr><tr><th rowspan=\"3\">PHP操作Mysql</th><td>Mysql扩展</td><td style=\"text-align:left;padding-left:10px;\">1. 与Mysql建立连接<br/>2. 连接错误处理<br/>3. 选择数据库<br/>4. 发送SQL语句<br/>5. 从结果集中取出一行数据<br/>6. 取得受影响的行数<br/>7. 释放资源<br/>8. 关闭数据库连接<br/>9. 字符集的处理方式 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td colspan=\"2\">这部分使用Mysql的基本扩展完成数据库的操作，当然是结合实例讲解，让学生透透彻彻的掌握PHP操作Mysql的技巧。</td></tr><tr><td>Mysqli扩展库</td><td style=\"text-align:left;padding-left:10px;\">1. 加载Mysqli扩展<br/>2. 连接数据库<br/>3. 发送查询<br/>4. 获得受影响记录数<br/>5. 返回自增ID<br/>6. 处理查询结果集<br/>7. 释放结果集资源<br/>8. 获得字段信息<br/>9. 释放连接资源<br/>10. Mysqli的事务处理<br/>11. 发送多条SQL语句<br/>12. 预准备语句<br/>13. 属性操作</td><td colspan=\"2\">mysqli.dll是PHP对mysql新特性的一个扩展支持。具有更简单的维护、更好的兼容性、向后兼容等优秀特性。同时支持面向对象的实现方式。这部分讲会结合实例，教会学生使用Mysqli扩展模块。</td></tr><tr><td>PDO抽象层</td><td style=\"text-align:left;padding-left:10px;\">1. PDO的工作原理<br/>2. 工启PDO库<br/>3. 通过PDO连接MYSQL<br/>4. 发送查询<br/>5. 处理结果集<br/>6. PDO属性设置<br/>7. 设置错误处理模式<br/>8. Mysql事务处理<br/>9. 返回服务器信息<br/>10. 设置和获得配置参数<br/>11. PDO实现预准备<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td colspan=\"2\">PDO扩展为PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据。这部分会带领学生学会使用PDO，能够使用PDO抽象层进行项目开发。</td></tr><tr><th>Mysql<br/>帐号权限设置</th><td>权限控制</td><td style=\"text-align:left;padding-left:10px;\">1. 了解Mysql权限系统<br/>2. 查看帐号信息<br/>3. 设置密码的5种方式<br/>4. 忘记root密码的解决方法<br/>5. 添加帐号<br/>6. 设置帐号权限<br/>7. 删除帐号</td><td colspan=\"2\">Mysql拥有健壮的权限控制体系。通过这部分的学习，让学生可以对Mysql的权限进行灵活的控制，对帐号进行合理的管理与权限设置。</td></tr></tbody></table>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('175','<table width=\"970\" border=\"1\" class=\"lession_info\"><tbody><tr><th width=\"140\">课程名称</th><th width=\"180\">教学科目</th><th width=\"260\" style=\"text-align:left;padding-left:10px;\">详细内容</th><th>完成目标</th></tr><tr><th>MySQL安全处理</th><td>SQL安全处理</td><td style=\"text-align:left;padding-left:10px;\">1. 有安全隐患的SQL实例分析<br/>2. 不安全的字符集<br/>3. PHP配置文件设置不对时对安全的影响<br/>4. PHP单字节对安全的影响<br/>5. 正确的转义处理<br/>6. 合理设置字符集<br/>7. 哪些字符集更安全 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>数据是网站中最最重要的内容，所以要确保我们的数据安全，掌握Mysql的数据全处理是开发人员必须掌握的技能。这部分讲师会以全程实例，让学生真正明白，怎么做到数据的绝对安全。</td></tr><tr><th rowspan=\"5\">事务、视图、<br/>存储过程、<br/>储存函数、<br/>触发器</th><td>基础部分</td><td style=\"text-align:left;padding-left:10px;\">1. Mysql多线程分析<br/>2. 共享锁与排他锁<br/>3. 表级锁与行级锁<br/>4. 存储引擎分析与选择<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>这部分让学生了解Mysql的内部运行原理与各储存引擎的特点，以及Mysql对锁的处理特点。</td></tr><tr><td>事务处理</td><td style=\"text-align:left;padding-left:10px;\">1. 存储引擎的选择<br/>2. 事务的ACID<br/>3. Mysql的工作模式<br/>4. commit与rollback<br/>5. 自定义的事务处理<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>事务处理可以确保除非事务性单元内的所有操作都成功完成，否则不会永久更新面向数据的资源。这部分以实例讲解教会学员使用事务保证数据的完整性。</td></tr><tr><td>视图</td><td style=\"text-align:left;padding-left:10px;\">1. 为什么使用视图<br/>2. 查看视图<br/>3. 创建视图<br/>4. 删除视图<br/>5. 修改视图<br/>6. 使用视图操作表记录</td><td>视图是存储在数据库中的查询的SQL语句，它主要出于两种原因：安全原因， 视图可以隐藏一些数据，另一原因是可使复杂的查询易于理解和使用。这部分要求学生掌握Mysql视图在实际开发中的使用方法与技巧。</td></tr><tr><td>存储过程/存储函数</td><td style=\"text-align:left;padding-left:10px;\">1. SET与DECLARE声明变量<br/>2. 预处理语句<br/>3. 执行预准备语句<br/>4. 删除预准备语句<br/>5. 存储过程的概念详解<br/>6. 结束符的设置<br/>7. BEGIN ... END<br/>8. IF...THEN...<br/>9. Case语句<br/>10. while语句<br/>11. SELECT ... INTO语句<br/>12. 创建存储过程<br/>13. 查看存储过程<br/>14. 调用存储过程<br/>15. 删除存储过程<br/>16. IN,OUT,INOUT传参<br/>17. 创建储存函数<br/>18. 删除储存函数<br/>19. 显示储存函数<br/>20. 实例详解 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>储存程序 (Stored Procedure)，是一种在数据库中存储复杂程序，以便外部程序调用的一种数据库对象。这部分教会学生在编写复杂SQL时使用储存过程与函数来完成，同时在实际开发中储存过程也会为SQL的复用性带来很大便利性。</td></tr><tr><td>触发器</td><td style=\"text-align:left;padding-left:10px;\">1. 触发器的作用<br/>2. 查看触发器<br/>3. 删除触发器<br/>4. 创建触发器<br/>5. 触发器实例详解 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>触发器(trigger)是可以监视增删改操作,并触发增删改操作。这部分教会学生合理在Mysql操作中灵活、合理的使用触发器功能。</td></tr><tr><th>Mysql的备份与恢复</th><td>数据备份的多种操作手段</td><td style=\"text-align:left;padding-left:10px;\">1. 数据备份的重要性<br/>2. Mysqldump选项详解<br/>3.备份所有数据库<br/>4.备份几个数据库<br/>5. 恢复数据<br/>6. Binlog日志详解<br/>7. 
增量备份Binlog日志<br/>8. Binlog的配置项<br/>9. Binlog日志恢复数据<br/>10. Binlog文件产生时机<br/>11. 查看binlog日志<br/>12. 指定还原点<br/>13. 删除binlog<br/>14. 备份注意事项</td><td>数据备份是保证数据安全、完整性必须要做的功。这部分讲解使用Mysqldump与BingLog两种方式对Mysql数据进行备份与还原的功能。保Mysql数据的完整，可靠。</td></tr><tr><th>SQL优化</th><td>全解Mysql性能优化</td><td style=\"text-align:left;padding-left:10px;\">1. 设计良好架构的必要性<br/>2. 字段类型的选择<br/>3. 选择合适的字符类型<br/>4. 数值类型的选择<br/>5. 储存引擎选择优化<br/>6. 数据储存位置<br/>7. 常用储存引擎比较<br/>8. 储存引擎的选择方法<br/>9. 什么是索引<br/>10. 索引的优势<br/>11. 索引类型<br/>12. 创建与修改索引<br/>13. 索引的优点<br/>14. 储存引擎中索引的实现<br/>15. 索引的弊端<br/>16. 什么字段该创建索引<br/>17. 前缀索引<br/>18. 组合索引<br/>19. Mysql查询优化程序<br/>20. SQL性能分析<br/>21. EXPLAN详解<br/>22. 
多表查询优化<br/>23. 子查询分析<br/>24. JOIN语句优化分析<br/>25. 数据导入优化<br/>26. Insert性能提高<br/>27. 
GROUP BY 排序带来的性能降低<br/>28. ORDER BY索引分析<br/>29. OR 索引分析<br/>30. 字段比较对性能的影响<br/>31. 
合理化建议<br/>32. Status获得mysql状态<br/>33. 慢查询slow<br/>34. 慢查询实验<br/>35. MySQL锁机制与优先级<br/>36. MyISAM索引键缓存<br/>37. MySQL查询缓存<br/>38. 优化Mysql连接数<br/>39. 数据库损坏的修复</td><td>性能不理想的系统中除了一部分是因为应用程序的负载确实超过了服务器的实际处理能力外,更多的是因为系统存在大量的SQL语句需要优化。<br/>这部分内容全部是为了加快Mysql执行效率，与运行状态分析。使学生掌握监控Mysql性能，提高SQL执行效率的本领，编写出高效率的SQL语句，解决低效率的SQL语句，找出由于Mysql原因造成网站运行变慢的根源。</td></tr><tr><th rowspan=\"2\">Linux网络安全</th><td>基础知识</td><td style=\"text-align:left;padding-left:10px;\">1. 网站安全意识<br/>2. 网站漏洞处理<br/>3. 目录与文件权限设置法则</td><td>做为Linux服务器管理者，要有及强的网站安全意识。本节将学习到，在日常服务器管理中应该遵守的安全规则。</td></tr><tr><td>防火墙(firewall)</td><td style=\"text-align:left;padding-left:10px;\">1. 什么是防火墙<br/>2. Iptables规则<br/>3. iptables验证顺序<br/>4. 安装IPTABLES<br/>5. iptable链与处理方式<br/>6. DROP与REJECT<br/>7. ACCEPT处理方式<br/>8. Iptables设置语法<br/>9. 查看防火墙<br/>10. 清空防火墙规则<br/>11. 设置防火墙规实例<br/>11. 数据包状态<br/>12. iptables的储存<br/>13. WEB服务器防火墙规则</td><td>iptables 是与最新的 3.5 版本 Linux 内核集成的 IP 信息包过滤系统。如果 Linux 系统连接到因特网或 LAN、服务器或连接 LAN 和因特网的代理服务器， 则该系统有利于在 Linux 系统上更好地控制 IP 信息包过滤和防火墙配置。本节将通过大量运维实例让学生熟练掌握iptables防火墙的设置规则。</td></tr><tr><th rowspan=\"2\">Apache HTTP Server</th><td>Httpd服务</td><td style=\"text-align:left;padding-left:10px;\">1. Apache与Httpd<br/>2. 安装Lamp环境<br/>3. Apache的开与关<br/>4. 主配置文件<br/>5. 扩展配置文件<br/>6. 扩展模块目录<br/>7. 默认数据目录<br/>8. 日志目录<br/>9. Apache执行脚本<br/>10. 网站根目录<br/>11. 超时时间<br/>12. 监听端<br/>13. 扩展配置文件<br/>14. 所有者与所属组<br/>15. 网站根目录权限设置<br/>16. 访问权限控制<br/>17. 默认访问页面与数据类型<br/>18. 系统帐号网站<br/>19. 自定义404错误页<br/>20. 日志文件<br/>21.虚拟主机设置</td><td>Apache源于NCSAhttpd服务器，经过多次修改，成为世界上最流行的Web服务器软件之一。Apache取自“a patchy server”的读音，意思是充满补丁的服务器，因为它是自由软件，所以不断有人来为它开发新的功能、新的特性、修改原来的缺陷。本节以实例形式详细介绍Apache服务器的各方面知识。</td></tr><tr><td>Rewrite重写URL</td><td style=\"text-align:left;padding-left:10px;\">1. 什么是Rewrite<br/>2. 开启Rewrite模块<br/>3. Rewrite指令<br/>4. .htaccess文件<br/>5. .htaccess改变默认文件<br/>6. RewriteEngine<br/>7. RewriteCond <br/>8. RewriteRule 
<br/>9. 通过rewrite实现404定义<br/>10. RewriteRule参数<br/>11. 网站伪静态操作<br/>12. 防止图片盗链<br/>13. 保护后台目录安全<br/>14. 不显示网站主入口文件 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>Rewirte主要的功能就是实现URL的跳转，它的正则表达式是基于Perl语言。可基于服务器级的(httpd.conf)和目录级的 (.htaccess)两种方式。本节将学习到是实际项目中Rewrite的使用技巧。</td></tr><tr><th>MemCache</th><td>Memcache使用实例详解</td><td style=\"text-align:left;padding-left:10px;\">1. Memcache的性能<br/>2. MemCache工作流程<br/>3. MemCache特点<br/>4. Windows安装memcache<br/>5. 在WIN32下无法更改内存大小的解决方法<br/>6. Windows下Memcache防火墙设置<br/>7. Linux下MemCache安装配置<br/>8. 起动MemCache<br/>9. 将MemCache加入系统服务<br/>10. 关闭MemCache<br/>11. add、set 、replace<br/>12. append、prepend <br/>13. delete 、 flush_all<br/>14. incr、decr<br/>15. Memcache原子操作<br/>16. 什么是casid<br/>17. gets与cas<br/>18. 安装Memcache的PHP扩展<br/>19. PHP中使用Memcache<br/>20. 连接Memcached<br/>21. 返回服务器版本信息<br/>22. 向连接池中添加memcache服务器<br/>23. 缓存服务器池中所有服务器统计信息<br/>24. Memcached内存分配<br/>25. 延迟删除过期item<br/>26. LRU垃圾回收机制<br/>27. PHP遍历memcache<br/>28. 监控MemCache<br/>29. Memcached参数<br/>30. memcached集群<br/>31. Consistent hashing一致性散列<br/>32. 读取memcached占用内存 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>Memcache是一个高性能的分布式的内存对象缓存系统，通过在内存里维护一个统一的巨大的hash表，它能够用来存储各种格式的数据，包括图像、视频、文件以及数据库检索的结果等。简单的说就是将数据调用到内存中，然后从内存中读取，从而大大提高读取速度。<br/>Memcache是danga的一个项目，最早是LiveJournal 服务的，最初为了加速 LiveJournal 访问速度而开发的，后来被很多大型的网站采用。<br/>Memcached是以守护程序方式运行于一个或多个服务器中，随时会接收客户端的连接和操作。<br/>Memcache主要用于关系型数据库的缓存，只是说主要并没有说全部，所以盾友不要误解，比如说可以用于session储存处理</td></tr><tr><th>SESSION储存</th><td>提升SESSION性能</td><td style=\"text-align:left;padding-left:10px;\">1. 自定义文件SESSION处理机制<br/>2. 自定义数据库SESSION处理机制<br/>3. 四种方式向session储存在Memcache中<br/>4. session持久化操作<br/>5. 在线用户统计 <br/>6. 远程session服务器设置 <br/>7. 远程session服务器防火墙设置 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>这部分教会学员使用多种方式处理SESSION的机制，每种方式都有其优缺点。访问量增大、并发量增大时SESSION处理性能的优劣，将直接影响到网站的响应速度。通过本章节的学习，学员可以将SESSION处理性能最优化。</td></tr><tr><th>Mysql主从复制</th><td>主从复制</td><td style=\"text-align:left;padding-left:10px;\">1. Mysql主从复制示意图<br/>2. 主从同步过程<br/>3. 主从复制的特点<br/>4. RESET MASTER<br/>5. Reset slave<br/>6. GRANT创建用户并授权<br/>7. 设置主服务器<br/>8. 设置binlog保存的天数<br/>9. 主服务器binlog日志position<br/>10. 添加slave帐号<br/>11. 设置从服务器<br/>11.监控同步状态<br/>12. 主从不同步的解决方法</td><td>在实际企业应用环境当中，单台mysql数据库是不足以满足日后业务需求的。譬如服务器发生故障，没有备份服务器来提供服务的话，业务就得停止。介于这种情况，我们来学习一下mysql主从复制。<br/>使用mysql主从复制的好处有：<br/>采用主从服务器这种架构，稳定性得以提升。如果主服务器发生故障，我们可以使用从服务器来提供服务。<br/>在主从服务器上分开处理用户的请求，可以提升数据处理效率。<br/>将主服务器上的数据复制到从服务器上，保护数据免受意外的损失</td></tr><tr><th>Mysql分区</th><td>分区详解</td><td style=\"text-align:left;padding-left:10px;\">1. Mysql性能优化方案<br/>2. Mysql表分区原理<br/>3. Mysql分区特点<br/>4. 查看Mysql是否支持分区<br/>5. Range分区<br/>6. LIST分区<br/>7. HASH分区<br/>8. Key分区</td><td>分区是为了改善大型表以及具有各种访问模式的表的可伸缩性，可管理性和提高数据库效率。如某用户表的记录超过了1000万条，那么就可以根据入库日期将表分区，也可以根据所在地将表分区。当然也可根据其他的条件分区。</td></tr><tr><th rowspan=\"3\">中文分词</th><td>Sphinx</td><td style=\"text-align:left;padding-left:10px;\">1. Sphinx是什么<br/>2. Sphinx的特性<br/>3. Sphinx下载安装<br/>4. Sphinx实验<br/>5. search搜索<br/>6. Sphinx执行流程<br/>7. Sphinx配置文件<br/>8. Sphinx数据源source配置<br/>9. Sphinx索引Index配置<br/>10.</td><td>Sphinx 单一索引最大可包含1亿条记录，在1千万条记录情况下的查询速度为0.x秒（毫秒级）。Sphinx创建索引的速度为：创建100万条记录的索引只需 3～4分钟，创建1000万条记录的索引可以在50分钟内完成，而只包含最新10万条记录的增量索引，重建一次只需几十秒。</td></tr><tr><td>Coreseek</td><td style=\"text-align:left;padding-left:10px;\">1. 何时，您需要全文检索<br/>2. Coreseek中文全文检索<br/>3. Coreseek包含组件<br/>4. 安装mmseg<br/>5. 中文分词测试<br/>6. Coreseek配置<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>Coreseek 是一款中文全文检索/搜索软件，以GPLv2许可协议开源发布，基于Sphinx研发并独立发布，专攻中文搜索和信息处理领域，适用于行业/垂直搜索、论坛/站内搜索、数据库搜索、文档/文献检索、信息检索、数据挖掘等应用场景，用户可以免费下载使用；同时针对有实际需要的客户，我们还提供专业的搜索技术与本地化的Sphinx技术支持服务（客户中，记录量最大已超过30亿条，文本容量最大已超过5TB)</td></tr><tr><td>PHP操作分词</td><td style=\"text-align:left;padding-left:10px;\">1. PHP操作Sphinx<br/>2. 安装php扩展<br/>3. 启动Sphinx<br/>4. PHP结果集ID过滤<br/>5.PHP结果集属性过滤<br/>6. PHP处理查询结果<br/>7. 实时索引更新 <br/>8. 索引合并 <br/>9. Sphinx分区配置<br/>10. 分区查询</td><td>本节将以实例形式教会学生使用PHP结合Coreseek完成中分词的使用。</td></tr></tbody></table>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('176','<table width=\"970\" border=\"1\" class=\"lession_info\"><tbody><tr><th width=\"140\">课程名称</th><th width=\"180\">教学科目</th><th width=\"260\" style=\"text-align:left;padding-left:10px;\">详细内容</th><th style=\"text-align:left;padding-left:10px;\">完成目标</th></tr><tr><th rowspan=\"3\">Mysql<br/>数据库设计</th><td>数据库发展历史</td><td style=\"text-align:left;padding-left:10px;\">1. 计算机中的数据<br/>2. 阶层型数据库<br/>3. 网络型数据库<br/>4. 关系型数据库<br/>5. Mysql的特点<br/>6.Sql语言介绍<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td style=\"text-align:left;padding-left:10px;\">这部分讲解为什么我在开发中使用数据库，对使用数据库的好处要有深刻的认识，明白使用数据库的重要性。了解Mysql数据库的特点，以及为什么要重多数据库产品中学习使用Mysql。了解sql语言的发展史，sql语言使用的广泛性以及sql语言的便捷性。</td></tr><tr><td>Mysql基本管理</td><td style=\"text-align:left;padding-left:10px;\">1. Mysql客户端与服务器端<br/>2. 启动与停止Mysql<br/>3. 连接Mysql<br/>4. Sql语言的4个部分 <br/>5. 创建数据库<br/>6. 数据库命名规范<br/>7. 改变当前使用数据库<br/>8. 安全的删除数据库<br/>9. 创建数据表<br/>10. 安全删据表<br/>11. 解决命令行不能输入中文BUG<br/>12. 复制表结构与表数据<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td style=\"text-align:left;padding-left:10px;\">通过本章节实例授课内容（当然后盾网所有内都是实例贯穿）要求学生掌握数据库的基本使用，对数据库与数据表等Mysql有很好的理解，数据库创建、数据表创建等知识，虽然这很简单，但是也很重要。</td></tr><tr><td>整数类型与修饰关键字</td><td style=\"text-align:left;padding-left:10px;\">1. 整数类型<br/>2. 浮点数类型<br/>3. 字符串类型<br/>4. char与varchar类型区别<br/>5. 数据类型修改zerofill与unsigned<br/>6. text与blog类型详解<br/>7. enum与set类型详细处理<br/>8. set类型的4种处理方式<br/>9. 网站中常用类型使用<br/>10. default使用技巧<br/>11. unique实际开发中的使用方法<br/>12. 主键primary key 使用方法<br/>13. auto_increment自增使用技巧</td><td style=\"text-align:left;padding-left:10px;\">Mysql储存不同的数据，要使用不同的数据类型。所以掌握Mysql的数据类型非常重要，这部分会对Mysql的各个数据类型进行详细的解释，什么数据使用什么数据类型，会讲解的非常清楚，这样以后学生在进行项目开发时进行表设计时就不会有任何问题。</td></tr><tr><th rowspan=\"2\">Mysql查询</th><td>Mysql基本查询</td><td style=\"text-align:left;padding-left:10px;\">1. SELECT基本使用<br/>2. As 别名关键字<br/>3. WHERE关键字<br/>4. AND 与 OR使用<br/>5. CONCAT函数使用<br/>6. DISTINCT使用方法<br/>7. IS NULL 与IS NOT NULL<br/>8. IF 与 IFNULL函数使用<br/>9. ORDER BY 排序<br/>10. DESC与ASC<br/>11. LIMIT关键字使用<br/>12. BETWEEN..AND..<br/>13. IN(...)关键字使用<br/>14. 多种查找SET数据类型方法<br/>15. LIKE与NOT LIKE<br/>16. REGEXP正则的使用<br/>17. RAND随机函使用<br/>18. 直接在终端执行SQL语句</td><td style=\"text-align:left;padding-left:10px;\">Mysql的查询很重要，也是使用Mysql数据库最常用的部分，当然这部分只是讲解Mysql查询的一部分，这部分老师会讲解大量实例，让学生真正使用Mysql数据库，为独立开发网站打好基础。</td></tr><tr><td>Mysql函数</td><td style=\"text-align:left;padding-left:10px;\">1. Mysql操作符<br/>2. Mysql中的Boolean类型<br/>3. COALESCE与GREATEST<br/>4. 逻辑运算符<br/>5. 流程控制<br/>6. 字符串处理函数<br/>7. 数学函数</td><td style=\"text-align:left;padding-left:10px;\">这部分以Mysql编程角度出发，学习Mysql中的各种函数处理。了解掌握了这些函数后，对编写高效、优雅的SQL语句提供了保证。也为后面的储存过程、触发器开发打好基础。</td></tr><tr><th>字符集与校对规则</th><td>字符集设计</td><td style=\"text-align:left;padding-left:10px;\">1. 二进制与非二进制字符串<br/>2. 计算机处理字符集的过程<br/>3. 常用字符集选择<br/>4. 字符集与校对规则<br/>5. 字符集长度<br/>6. 校对规则实例详解<br/>7. 库、表、字段字符集</td><td style=\"text-align:left;padding-left:10px;\">字符串是我们储存数据的最常用的数据类型，有字符串就有字符集（除了二进制类型），本节我们要学习怎样设计合理的字符集与校对规则，学员掌握了这样技能后，烦人的乱码问题，将不在出现了，所以这是很重要的，必经我们开发的大部分网站都是宽字节的。</td></tr><tr><th>Mysql 操作记录</th><td>Mysql增删改</td><td style=\"text-align:left;padding-left:10px;\">1. 严格模式与宽松模式<br/>2. INSERT插入数据<br/>3. UPDATE更新数据<br/>4. DELETE删除数据<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td style=\"text-align:left;padding-left:10px;\">记住，全部实例贯穿始终，实例太多，不便一一列出。但是可以保证让学生都能学得会，都能学得好。这部分就是讲解数据的增加、删除、插入操作。</td></tr><tr><th>修改表结构</th><td>更改表结构</td><td style=\"text-align:left;padding-left:10px;\">1. 修改表名<br/>2. 修改表字段<br/>3. 修改表主键<br/>4. 修改表字符集</td><td style=\"text-align:left;padding-left:10px;\">开发过程中，创建完表结构后，少不了对表与字段的二次修改。所以学员要掌握这项本领，来应对开发中的表结构修改本领。</td></tr><tr><th rowspan=\"2\">日期与时间</th><td>日期类型</td><td style=\"text-align:left;padding-left:10px;\">1. 日期与时间数据类型<br/>2. 选择日期类型的原则<br/>3. timestamp的使用方法<br/>4. 获得当前日期与时间<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td style=\"text-align:left;padding-left:10px;\">int(10)不是万能的，所以我们要掌握Mysql操作日期与时间类型的本领，老师会以考勤模块等实例向学生讲解Mysql的日期与时间数据类型的使用</td></tr><tr><td>函数实例</td><td style=\"text-align:left;padding-left:10px;\">1. str_to_date()<br/>2. date_format()<br/>3. time_format()<br/>4. unix_timestamp()<br/>5. interval +(-) num unit<br/>6. date_add() date_sub()<br/>7. datediff()<br/>8. Timestampdiff()</td><td style=\"text-align:left;padding-left:10px;\">要操作Mysql日期与时间类型，不会使用函数是不行的，这里只列出了少量函数，讲师会在课堂上给学生讲解更多实例，新奇的Mysql日期处理函数，记住以实例贯穿始终。</td></tr><tr><th>分组与统计</th><td>实例知识</td><td style=\"text-align:left;padding-left:10px;\">1. count()<br/>2. min() max avg() sum()<br/>3. group by 分组<br/>4. having 分组筛选</td><td style=\"text-align:left;padding-left:10px;\">在网站的开发中，无论是分类文章的汇总还是求商品价格的平均值，都是分组与统计的工作场景，所以这部分通过大量实例教会学员，分组与统计的使用技巧。</td></tr><tr><th rowspan=\"2\">MySQL多表操作</th><td>基础部分</td><td style=\"text-align:left;padding-left:10px;\">1. 多表查询使用场景<br/>2. 一对一表关系分析<br/>3. 一对多表关系分析<br/>4. 多对多表关系分析<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td style=\"text-align:left;padding-left:10px;\">Mysql是关系型数据库，优点就是多表的关联关系。这部分主要让学生了解表与表之间的各种关联关系，讲师会通过生动的现实生活中的各种关联关系让学生真真正正搞懂各种关系，也要清楚在开始进行表设计时，应该注意到的问题。</td></tr><tr><td>实例操作</td><td style=\"text-align:left;padding-left:10px;\">1. 笛卡尔基<br/>2. 内部连接操作<br/>3. 外问连接操作<br/>4. 自连接操作<br/>5. 多表实例操作</td><td style=\"text-align:left;padding-left:10px;\">这部分就讲师会通过大量实例讲解，每一个实例讲师都会手把手的教会每一个同学（小班授课的好处），最终让学生达到，哦！多表关联是很简单的。</td></tr><tr><th rowspan=\"3\">PHP操作Mysql</th><td>Mysql扩展</td><td style=\"text-align:left;padding-left:10px;\">1. 与Mysql建立连接<br/>2. 连接错误处理<br/>3. 选择数据库<br/>4. 发送SQL语句<br/>5. 从结果集中取出一行数据<br/>6. 取得受影响的行数<br/>7. 释放资源<br/>8. 关闭数据库连接<br/>9. 字符集的处理方式 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td style=\"text-align:left;padding-left:10px;\">这部分使用Mysql的基本扩展完成数据库的操作，当然是结合实例讲解，让学生透透彻彻的掌握PHP操作Mysql的技巧。</td></tr><tr><td>Mysqli扩展库</td><td style=\"text-align:left;padding-left:10px;\">1. 加载Mysqli扩展<br/>2. 连接数据库<br/>3. 发送查询<br/>4. 获得受影响记录数<br/>5. 返回自增ID<br/>6. 处理查询结果集<br/>7. 释放结果集资源<br/>8. 获得字段信息<br/>9. 释放连接资源<br/>10. Mysqli的事务处理<br/>11. 发送多条SQL语句<br/>12. 预准备语句<br/>13. 属性操作</td><td style=\"text-align:left;padding-left:10px;\">mysqli.dll是PHP对mysql新特性的一个扩展支持。具有更简单的维护、更好的兼容性、向后兼容等优秀特性。同时支持面向对象的实现方式。这部分讲会结合实例，教会学生使用Mysqli扩展模块。</td></tr><tr><td>PDO抽象层</td><td style=\"text-align:left;padding-left:10px;\">1. PDO的工作原理<br/>2. 工启PDO库<br/>3. 通过PDO连接MYSQL<br/>4. 发送查询<br/>5. 处理结果集<br/>6. PDO属性设置<br/>7. 设置错误处理模式<br/>8. Mysql事务处理<br/>9. 返回服务器信息<br/>10. 设置和获得配置参数<br/>11. PDO实现预准备<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td style=\"text-align:left;padding-left:10px;\">PDO扩展为PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据。这部分会带领学生学会使用PDO，能够使用PDO抽象层进行项目开发。</td></tr><tr><th>MySQL安全处理</th><td>SQL安全处理</td><td style=\"text-align:left;padding-left:10px;\">1. 有安全隐患的SQL实例分析<br/>2. 不安全的字符集<br/>3. PHP配置文件设置不对时对安全的影响<br/>4. PHP单字节对安全的影响<br/>5. 正确的转义处理<br/>6. 合理设置字符集<br/>7. 哪些字符集更安全 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td style=\"text-align:left;padding-left:10px;\">数据是网站中最最重要的内容，所以要确保我们的数据安全，掌握Mysql的数据全处理是开发人员必须掌握的技能。这部分讲师会以全程实例，让学生真正明白，怎么做到数据的绝对安全。</td></tr><tr><th rowspan=\"5\">事务、<br/>视图、存储过程、储存函数、触发器</th><td>基础部分</td><td style=\"text-align:left;padding-left:10px;\">1. Mysql多线程分析<br/>2. 共享锁与排他锁<br/>3. 表级锁与行级锁<br/>4. 存储引擎分析与选择<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td style=\"text-align:left;padding-left:10px;\">这部分让学生了解Mysql的内部运行原理与各储存引擎的特点，以及Mysql对锁的处理特点。</td></tr><tr><td>事务处理</td><td style=\"text-align:left;padding-left:10px;\">1. 存储引擎的选择<br/>2. 事务的ACID<br/>3. Mysql的工作模式<br/>4. commit与rollback<br/>5. 自定义的事务处理<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td style=\"text-align:left;padding-left:10px;\">事务处理可以确保除非事务性单元内的所有操作都成功完成，否则不会永久更新面向数据的资源。这部分以实例讲解教会学员使用事务保证数据的完整性。</td></tr><tr><td>视图</td><td style=\"text-align:left;padding-left:10px;\">1. 为什么使用视图<br/>2. 查看视图<br/>3. 创建视图<br/>4. 删除视图<br/>5. 修改视图<br/>6. 使用视图操作表记录</td><td style=\"text-align:left;padding-left:10px;\">视图是存储在数据库中的查询的SQL语句，它主要出于两种原因：安全原因， 视图可以隐藏一些数据，另一原因是可使复杂的查询易于理解和使用。这部分要求学生掌握Mysql视图在实际开发中的使用方法与技巧。</td></tr><tr><td>存储过程/存储函数</td><td style=\"text-align:left;padding-left:10px;\">1. SET与DECLARE声明变量<br/>2. 预处理语句<br/>3. 执行预准备语句<br/>4. 删除预准备语句<br/>5. 存储过程的概念详解<br/>6. 结束符的设置<br/>7. BEGIN ... END<br/>8. IF...THEN...<br/>9. Case语句<br/>10. while语句<br/>11. SELECT ... INTO语句<br/>12. 创建存储过程<br/>13. 查看存储过程<br/>14. 调用存储过程<br/>15. 删除存储过程<br/>16. IN,OUT,INOUT传参<br/>17. 创建储存函数<br/>18. 删除储存函数<br/>19. 显示储存函数<br/>20. 实例详解 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td style=\"text-align:left;padding-left:10px;\">储存程序 (Stored Procedure)，是一种在数据库中存储复杂程序，以便外部程序调用的一种数据库对象。这部分教会学生在编写复杂SQL时使用储存过程与函数来完成，同时在实际开发中储存过程也会为SQL的复用性带来很大便利性。</td></tr><tr><td>触发器</td><td style=\"text-align:left;padding-left:10px;\">1. 触发器的作用<br/>2. 查看触发器<br/>3. 删除触发器<br/>4. 创建触发器<br/>5. 触发器实例详解 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td style=\"text-align:left;padding-left:10px;\">触发器(trigger)是可以监视增删改操作,并触发增删改操作。这部分教会学生合理在Mysql操作中灵活、合理的使用触发器功能。</td></tr><tr><th>Mysql的备份与恢复</th><td>数据备份的多种操作手段</td><td style=\"text-align:left;padding-left:10px;\">1. 数据备份的重要性<br/>2. Mysqldump选项详解<br/>3.备份所有数据库<br/>4.备份几个数据库<br/>5. 恢复数据<br/>6. Binlog日志详解<br/>7. 
增量备份Binlog日志<br/>8. Binlog的配置项<br/>9. Binlog日志恢复数据<br/>10. Binlog文件产生时机<br/>11. 查看binlog日志<br/>12. 指定还原点<br/>13. 删除binlog<br/>14. 备份注意事项</td><td style=\"text-align:left;padding-left:10px;\">数据备份是保证数据安全、完整性必须要做的功。这部分讲解使用Mysqldump与BingLog两种方式对Mysql数据进行备份与还原的功能。保Mysql数据的完整，可靠。</td></tr><tr><th>SQL优化</th><td>全解Mysql性能优化</td><td style=\"text-align:left;padding-left:10px;\">1. 设计良好架构的必要性<br/>2. 字段类型的选择<br/>3. 选择合适的字符类型<br/>4. 数值类型的选择<br/>5. 储存引擎选择优化<br/>6. 数据储存位置<br/>7. 常用储存引擎比较<br/>8. 储存引擎的选择方法<br/>9. 什么是索引<br/>10. 索引的优势<br/>11. 索引类型<br/>12. 创建与修改索引<br/>13. 索引的优点<br/>14. 储存引擎中索引的实现<br/>15. 索引的弊端<br/>16. 什么字段该创建索引<br/>17. 前缀索引<br/>18. 组合索引<br/>19. Mysql查询优化程序<br/>20. SQL性能分析<br/>21. EXPLAN详解<br/>22. 
多表查询优化<br/>23. 子查询分析<br/>24. JOIN语句优化分析<br/>25. 数据导入优化<br/>26. Insert性能提高<br/>27. 
GROUP BY 排序带来的性能降低<br/>28. ORDER BY索引分析<br/>29. OR 索引分析<br/>30. 字段比较对性能的影响<br/>31. 
合理化建议<br/>32. Status获得mysql状态<br/>33. 慢查询slow<br/>34. 慢查询实验<br/>35. MySQL锁机制与优先级<br/>36. MyISAM索引键缓存<br/>37. MySQL查询缓存<br/>38. 优化Mysql连接数<br/>39. 数据库损坏的修复</td><td style=\"text-align:left;padding-left:10px;\">性能不理想的系统中除了一部分是因为应用程序的负载确实超过了服务器的实际处理能力外,更多的是因为系统存在大量的SQL语句需要优化。<br/>这部分内容全部是为了加快Mysql执行效率，与运行状态分析。使学生掌握监控Mysql性能，提高SQL执行效率的本领，编写出高效率的SQL语句，解决低效率的SQL语句，找出由于Mysql原因造成网站运行变慢的根源。</td></tr><tr><th>Mysql<br/>帐号权限设置</th><td>权限控制</td><td style=\"text-align:left;padding-left:10px;\">1. 了解Mysql权限系统<br/>2. 查看帐号信息<br/>3. 设置密码的5种方式<br/>4. 忘记root密码的解决方法<br/>5. 添加帐号<br/>6. 设置帐号权限<br/>7. 删除帐号</td><td style=\"text-align:left;padding-left:10px;\">Mysql拥有健壮的权限控制体系。通过这部分的学习，让学生可以对Mysql的权限进行灵活的控制，对帐号进行合理的管理与权限设置。</td></tr></tbody></table>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('177','<table width=\"970\" border=\"1\" class=\"lession_info\"><tbody><tr><th width=\"140\">课程名称</th><th width=\"180\">教学科目</th><th width=\"260\" style=\"text-align:left;padding-left:10px;\">详细内容</th><th>完成目标</th></tr><tr><th rowspan=\"3\">Linux介绍与安装</th><td>Linux介绍</td><td style=\"text-align:left;padding-left:10px;\">1. 开源软件介绍<br/>2. GNU计划<br/>3. Linux特点<br/>4. 硬件需求<br/>5. Linux发行版介绍<br/>6. 下载CentOS <br/>7. 系统启动过程<br/>8. 内核版本<br/>9. Linux系统的组成</td><td>这部分介绍学习Linux的必要性，以及常见的开源协议，与Linux的启动流程、系统组成等知识。</td></tr><tr><td>Linux安装</td><td style=\"text-align:left;padding-left:10px;\">1. 下载Centos<br/>2. VirtualBox虚拟机使用详解<br/>3. 时区设置<br/>4. Centos的分区设置<br/>5. 选择安装软件<br/>6. 完成Centos安装<br/>7. 目录说明<br/>8. 解决终端中文乱码<br/>9. 版本查看</td><td>这部分通过免费、开源的VirtualBox虚拟机完成Centos的安装。</td></tr><tr><td>Shell</td><td style=\"text-align:left;padding-left:10px;\">1. Shell介绍<br/>2. Terminal终端<br/>3. 命令的构成<br/>4. 自动补全、停止与退出<br/>5. 获得帮助<br/>6. 关机、重起命令<br/>7. 忘记Root管理员密码</td><td>Shell是一个命令解释器，它解释由用户输入的命令并且把它们送到内核。这部分使学生掌握Shell的基本使用方法。</td></tr><tr><th rowspan=\"3\">磁盘与文件操作</th><td>磁盘操作</td><td style=\"text-align:left;padding-left:10px;\">1. 列出目录大小<br/>2. 查看分区容量<br/>3. 使用fdisk对磁盘分区<br/>4. 读取分区表<br/>5. 分区格式化<br/>6. 磁盘修复<br/>7. 挂载与卸载磁盘<br/>8. 开机自动挂载<br/>9. 挂载时设置ACL选项<br/>10. 挂载失败的补救</td><td>作为Linux服务器使用者，学握硬盘的分区、格式化、挂载操作是必须的，同时还要掌握在挂载发生异常时的处理方法，这部分内将在本节学习。</td></tr><tr><td>创建与删除</td><td style=\"text-align:left;padding-left:10px;\">1. 相对与绝对路径 <br/>2. 环境路径<br/>3. 取得目录与文件名<br/>4. 显示目录列表命令<br/>5. 切换与更改当前目录<br/>6. 创建与删除目录<br/>7. 复制操作<br/>8. 创建文件与修改文件时间<br/>9. 硬链接与软链接<br/>10. 改名与移动<br/>11. which 、whereis查找文件<br/>12. find查找文件<br/>13. 查找并执行命令 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>这部分我们将学习对文件与目录创建、修改、复制、删除等操作，学习完这部分后，学员可以任意对Linux的目录进行操作使用。</td></tr><tr><td>内容操作</td><td style=\"text-align:left;padding-left:10px;\">1. 取文件内容<br/>2. 显示文件内容<br/>3. 显示行、字符、字节数<br/>4. 文本搜索grep<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>这部分主要是对文件内容的读取操作，学习完这部分后，学员可以不用使用VIM就可以读取文件内容，对快速文件内容获取，提供的高效的手段。</td></tr><tr><th>压缩与解压</th><td>压缩与解压</td><td style=\"text-align:left;padding-left:10px;\">1. 压缩的必要性<br/>2. zip与unzip<br/>3. gzip<br/>4. bzip2使用<br/>5. tar打包</td><td>这部分我们将讨论对文件或目录的压缩处理，压缩可以及大的减少文体积。同时我们在网站下载的软件，大部分都是压缩的，所以不会使用Linux压缩与解压是很麻烦的。</td></tr><tr><th>VIM编辑器使用</th><td>Vim编辑器操作详解</td><td style=\"text-align:left;padding-left:10px;\">1. Vi与Vim介绍<br/>2. Vim的三种模式<br/>3. Vim基本操作<br/>4. vim快捷键说明<br/>5. 打开多个文件<br/>6. Vim配置<br/>7. vim的swp暂存文件<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>VIM是高效的Linux系统下的文本编辑软件，使用Vim可以快速编辑Linux下的配置文件，或编辑PHP代码，本章节将详细介绍Vim的使用方法。</td></tr><tr><th rowspan=\"7\">帐号管理与权限控制</th><td>权限控制</td><td style=\"text-align:left;padding-left:10px;\">1. 用户/用户组/其他人<br/>2. 文件类型说明 <br/>3. 文件权限说明<br/>4. 默认权限umask<br/>5. 改变所有者<br/>6. 改变所属组<br/>7. 权限修改<br/>8. 文件权限说明<br/>9. 目录权限说明 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>权限控制是Linux中重要的概念，为了保证我们的网站运行在安全的环境下，学习权限控制知识非常重要，本章节就是对权限控制的详讨论</td></tr><tr><td>帐号管理</td><td style=\"text-align:left;padding-left:10px;\">1. 验证流程<br/>2. 查看用户uid，gid与所在组<br/>3. /etc/passwd说明<br/>4. /etc/shadow说明<br/>5. /etc/gshadow说明<br/>6. 使用useradd添加用户<br/>7. 使用usermod修改用户<br/>8. 锁定与删除用户<br/>9. 修改密码<br/>10. 修改帐号和密码的有效期限<br/>11. 用户切换</td><td>Linux是多用户与多任务系统，也就是说同时可以有多个用户在Linux上活动。那么这么多用户的管理，我们要有一套策略和手段。本章节讲解Linux用户管理知识。</td></tr><tr><td>SUDO</td><td style=\"text-align:left;padding-left:10px;\"><p>1. 什么是sudo<br/>2. /etc/sudoers配置<br/>3. 获得root权限<br/>4. 为用户组设置sudo<br/>5. 执行sudo不需要输入密码<br/>6. 只能执行某个命令<br/>7. alias别名<br/>8.</p></td><td><p>sudo是linux系统管理指令，是允许系统管理员让普通用户执行一些或者全部的root命令的工具，如halt，reboot，su等等。这样不仅减少了root用户的登陆和管理时间，同样也提高了安全性。</p></td></tr><tr><td>用户组管理</td><td style=\"text-align:left;padding-left:10px;\">1. 新增用户组<br/>2. 新增系统用户组&nbsp; <br/>3. 删除用户组<br/>4. 更改用户组<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>Linux中所有帐号都有其所在的用户组，这是非常方便的用户管理手段，所以掌握Linux下用户组的管理也很重要。</td></tr><tr><td>特殊权限位</td><td style=\"text-align:left;padding-left:10px;\">1. Set UID<br/>2. Set GID<br/>3. Set BIT</td><td>特殊权限位以很多Linux管理人员来说是一个不太清晰的技术，但特殊权限会为我们进行权限划分带来很大便利，让复杂的问题简单化。</td></tr><tr><td>ACL权限控制</td><td style=\"text-align:left;padding-left:10px;\">1. 什么是ACL<br/>2. 让文件系统支持ACL<br/>3. 给文件或目录设置ACL<br/>4. 挂载磁盘时设置ACL</td><td>Linux中的ACL功能是体现在对文件和目录的权限上，而且对于权限设置的精细度上有了非常大的提高；比如一个文件或者目录的所有者和所有者都是tangsir,权限为755，那么也就是说root用户和tangsir可以写入外，其余的人是没有权限的。但是如果我们配置了ACL功能的话，我们完全可以使另一个用户对此文件或者目录有写入的权限。</td></tr><tr><td>在线用户</td><td style=\"text-align:left;padding-left:10px;\">1. 查看在线用户<br/>2. 踢出在线用户<br/>3. 查看用户登录时间<br/>4. 发送信息<br/>5. 系统广播</td><td>这部分来学习对已经登录的在线用户进行管理，如查看在线用户或发送站内广播等。</td></tr><tr><th rowspan=\"2\">网络管理</th><td>网络基础</td><td style=\"text-align:left;padding-left:10px;\">1. 详解IP地址<br/>2. 详解端口<br/>3. 常见端口<br/>4. DNS主机与域名<br/>5. 修改主机名<br/>6. 网卡设置<br/>7.NetworkManager<br/>8. 网卡的启动与关闭<br/>9. 设置DNS服务器<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>Linux基本都是用在网络服务上，这部分将详细讲解网站常用知识与Linux服务器网卡正确的设置方法。</td></tr><tr><td>网络命令</td><td style=\"text-align:left;padding-left:10px;\">1. ifconfig查看与设置网络<br/>2. 网络连接测试<br/>3. 查看主机名或IP<br/>4. netstat网络状态<br/>5. 下载文件wget</td><td>这部分我们将学习到基本的网络管理与监控知识。</td></tr><tr><th rowspan=\"3\">软件安装</th><td>源代码安</td><td style=\"text-align:left;padding-left:10px;\"><p>1. 源代码与可执行文件<br/>2. tarball<br/>3. 源代码编译过程<br/>4. 源码安装目录<br/>5. 静态与动态函数库<br/>6. 动态函数库放入内存<br/>7. 查看软件需要哪些函数库<br/>8. 源码安装memcache<br/>9. 软件包管理器</p></td><td>源程序，是指未经编译的，按照一定的程序设计语言规范书写的，人类可读的文本文件，提供了对程序的二次定制性。而且很多程序只提供了源代码，所以做为Linux管理才，要掌握基于于源代码的软件安装方法。</td></tr><tr><td>RPM包管理</td><td style=\"text-align:left;padding-left:10px;\">1. RPM与DPKG<br/>2. RPM包<br/>3. 查看已安装软件包<br/>4. 硬件平台与软件版本<br/>5. 使用rpm安装软件<br/>6. 
删除软件</td><td>RPM提供了方便的软件安装、卸载、升级和管理功能，这部分课程我们将掌握RPM管理软件的方法。</td></tr><tr><td>YUM管理软件</td><td style=\"text-align:left;padding-left:10px;\">1. YUM的优点与缺点<br/>2. YUM执行流程<br/>3. 使用YUM查找软件<br/>4. 安装软件<br/>5. 修改yum源为163<br/>6. 使用YUM安LAMP环境</td><td>Yum（全称为 Yellow dog Updater, Modified）是一个在Fedora和RedHat以及SUSE、CentOS中的Shell前端软件包管理器。基於RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。</td></tr><tr><th rowspan=\"2\">计划任务</th><td>at</td><td style=\"text-align:left;padding-left:10px;\">1. 什么是计划任务<br/>2. 什么是at<br/>3. at配置文件与目录<br/>4. 添加at单一计划任务<br/>5.</td><td>at计划任务是指在特定的时间执行某项工作,在特定的时间执行一次任务，是非常方便的计划任务处理手段，本节将学习如何使用at。</td></tr><tr><td>crontab</td><td style=\"text-align:left;padding-left:10px;\">1. 周期性计划任务crontab<br/>2. crontab时间格式<br/>3. 创建任务<br/>4. crontab命令<br/>5. anacron<br/>6. 启动时执行anacron</td><td>crontab命令常见于Unix和类Unix的操作系统之中，用于设置周期性被执行的指令。该命令从标准输入设备读取指令，并将其存放于“crontab”文件中，以供之后读取和执行。</td></tr><tr><th rowspan=\"2\">进程与服务</th><td>进程管理</td><td style=\"text-align:left;padding-left:10px;\">1. 进程与子进程<br/>2. 父子进程演示<br/>3. 普通进程<br/>4. 什么是系统服务<br/>5. 前台与后台执行<br/>6. 后台暂停执行<br/>7. 终止进程<br/>8. 获得使用文件的进程<br/>9. 查看占用文件的进程<br/>10. 查看进程用户进程<br/>11. 筛选查看进程<br/>12. 查看系统的所有进程<br/>13. 树状显示进程信息<br/>14. 系统运行时间与负载<br/>15. 动态查看进程<br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>进程是正在运行的程序实体，并且包括这个运行的程序中占据的所有系统资源，比如说CPU，IO,内存，网络资源等。Linux管理者要清楚的知道系统服务进行的状态，服务器负载情况，这部分我们将学习到这些知识。</td></tr><tr><td>服务管理</td><td style=\"text-align:left;padding-left:10px;\"><p>1. 什么是服务<br/>2. 服务的启动<br/>3. 服务的文件与目录格局<br/>4. 启动与关闭服务<br/>5. service命令使用详解<br/>6. 系统启动流程<br/>7. 系统运行级别<br/>8. 运行级别切换<br/>10. chkconfig设置服务开机启动<br/>11. 添加与移除开机启动服务<br/>12. chkconfig开或关服务<br/>13. 使用图形界面开关服务<br/>14. 显示服务状态<br/>15. 创建服务脚本<br/>

 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p></td><td>服务（service)就是常驻内存的进程，因为服务一直驻留内存等待服务所以也称为守护（daemon)进程。服务器有很多服务，比如ftp、www、mail等服务，客户端通过ip地址与服务器建立连接后，则通过端口取得相应的服务。本章节我们将学习到详细的服务管理知识。</td></tr><tr><th rowspan=\"4\">常用服务</th><td>SSH与VNC远程管理</td><td style=\"text-align:left;padding-left:10px;\"><p>1. SSH与Telnet<br/>2. SSH服务起动<br/>3. 远程登录<br/>4.不登录直接执行命令<br/>5.通过SSH复制数据<br/>6.将远程服务器数据复制到本地<br/>7. PuTTY软件的使用<br/>8. 了解VNC<br/>9. 下载VNC<br/>10. 修改VNC配置文件<br/>11. 设置密码&amp;起动服务<br/>12. 使用客户端远程登录<br/>13. 防火墙设置</p></td><td>这部分课包括SSH协议的介绍与SSH服务的启动与管理。VNC是在基于UNIX和Linux操作系统的免费的开源软件，远程控制能力强大，高效实用，其性能可以和Windows和MAC中的任何远程控制软件媲美。这部分将学习到VNC的安装、使用、管理等知识。</td></tr><tr><td>SAMBA服务</td><td style=\"text-align:left;padding-left:10px;\"><p>1. Samba服务的使用目的<br/>2. Samba服务器的功能<br/>3. 安装与启动Samba<br/>4. 全局配置段Global<br/>5.允许的客户端<br/>6.拒绝的客户端<br/>7. 自由访问Samba<br/>8. 共享目录配置项设置<br/>9. 允许匿名用户访问<br/>10. windows连接samba<br/>11. Mac连接samba<br/>12. ubuntu连接<br/>13. 需要验证的samba<br/>

 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p></td><td>Samba是一套免费的开源软件，可以在linux或其他类unix操作系统上实现windows域控制器，文件服务，打印服务等。Samba实现了windows系统所使用的核心网络协议：SMB(Server Message Block)。本节将通过实例让每一个同学都可以熟练使用Samba服务。</td></tr><tr><td>FTP服务器</td><td style=\"text-align:left;padding-left:10px;\">1. 什么是ftp服务<br/>2. FTP主动模式<br/>3. FTP被动模式<br/>4. FTP登陆帐号<br/>5. vsFTPd服务器特点<br/>6. Centos安装VSFTP<br/>7. Ubuntu安装VSFTP<br/>8. 启动服务<br/>9. 禁止某些用户vsftpd服务<br/>10. 连接vsftp服务器<br/>11. 实体帐号登录<br/>12. 实体帐号访问权限控制<br/>13. 匿名用户访问<br/>14. vsftpd.conf配置文件说明<br/>15. 用户浏览目录的权限<br/>16. 帐号登录默认目录<br/>17. 带宽与连接数限制<br/>18. 设置被动模式端口<br/>19. 设计防火墙规则 <br/>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td><td>FTP的全称是File Transfer Protocol(文件传输协议)，顾名思义，就是专门用来传输文件的协议。FTP的主要作用，就是让用户连接上一个远程计算机(这些计算机上运行着 FTP服务器程序)察看远程计算机有哪些文件，然后把文件从远程计算机上拷到本地计算机，或把本地计算机的文件送到远程计算机去。</td></tr><tr><td>NTP时间服务器</td><td style=\"text-align:left;padding-left:10px;\"><p>1. 时区概念<br/>2. 设置时区<br/>3. Linux时钟 <br/>4. 时间函数<br/>5. 修改时间<br/>6. NTP时间服务器<br/>7. 安装NTP服务软件<br/>8. 同步网络时间 <br/>9. 客户机配置NTP服务器</p></td><td>网站开发中我们要保证时间是绝准确的，那怎么才能做到这一点呢，这就是本节要学习的内容NTP服务。</td></tr><tr><th>Ubuntu安装与使用</th><td>Ubuntu使用</td><td style=\"text-align:left;padding-left:10px;\">1. Ubuntu介绍<br/>2. 软件获取<br/>3. Ubuntu的安装<br/>4. 双系统安装方法<br/>5. 修改软件源<br/>6. 安装Netbeans<br/>7. apt-get与apt-cache<br/>8. 修改配置项创建DOCK图标<br/>9. 解决Ubuntu中字段发虚问题</td><td>Ubuntu（友帮拓）是一个以桌面应用为主的Linux操作系统。后盾网不但详细讲解Linux的使用，同时要求学员必须使用一款Linux桌面发行版，进行PHP开发，也就是说学完Linux还要用上Linux，这样的好处是学员不容易忘记Linux的使用（国内只有后盾网这样做）。</td></tr></tbody></table>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('179','<p><strong><span style=\"color: rgb(255, 0, 0);\">【第一阶段:网页标准化布局】&nbsp;<a href=\"http://localhost/hdcms/html/kechengguanli/2014/115/172.html\" target=\"_blank\" title=\"\"><span style=\"color: rgb(79, 129, 189);\">☆点击查看该阶段详细课程☆</span></a></span></strong></p><p>&nbsp; &nbsp; <span style=\"color: rgb(89, 89, 89); font-size: 14px;\">掌握HTML超文本标记语言，DIVCSS网页标准化布局，兼容多种浏览器独立设计制作静态网站，掌握用DIV+CSS方式制作网站的相关知识，PSD|JPG|PNG等网页美工图的切图切片、CSS布局、前台CSS制作。</span></p><p><br/></p><hr/><p><strong><span style=\"color: rgb(255, 0, 0);\"><br/></span></strong></p><p><strong><span style=\"color: rgb(255, 0, 0);\">【第二阶段:JavaScript工程师】</span></strong>&nbsp;<a href=\"http://localhost/hdcms/html/kechengguanli/2014/115/178.html\" target=\"_blank\" title=\"\"><strong><span style=\"color: rgb(79, 129, 189);\">☆点击查看该阶段详细课程☆</span></strong></a></p><p>&nbsp; &nbsp; <span style=\"color: rgb(89, 89, 89); font-size: 14px;\">通过本阶段的学习熟练掌握客户端脚本JAVASCRIPT的学习，主要包括JavaScript基本语法，数据类型、表达式、语句、数据类型、类、构造函数、原型、BOM、DOM、事件、COOKIE、xml处理等。</span></p><p><br/></p><hr/><p><strong><span style=\"color: rgb(255, 0, 0);\"><br/></span></strong></p><p><strong><span style=\"color: rgb(255, 0, 0);\">【第三阶段:Linux系统工程师】</span></strong>&nbsp;<a href=\"http://localhost/hdcms/html/kechengguanli/2014/115/177.html\" target=\"_blank\" title=\"\"><strong><span style=\"color: rgb(79, 129, 189);\">☆点击查看该阶段详细课程☆</span></strong></a></p><p>&nbsp; &nbsp; <span style=\"color: rgb(89, 89, 89); font-size: 14px;\">通过这部分的学习掌握了LINUX系统的作用与优势，掌握LINUX安装方法。LINUX系统基本目录与文件操作命令，文件检索命令，VIM编辑器的使用，LINUX下文件的压缩管理，LINUX引导流程与进程管理，LINUX用户与用户组的配置，各种LIUNX下软件的安装方式。掌握服务器环境的搭建包括：dhcp服务、samba服务、nfs服务及LAMP开发环境。还包括大并发处理、大负载处理、大流量处理、memcache缓存技术、squid缓存技术、redis缓存技术等后盾独家课程。</span></p><p><br/></p><hr/><p><strong><span style=\"color: rgb(255, 0, 0);\"><br/></span></strong></p><p><strong><span style=\"color: rgb(255, 0, 0);\">【第四阶段:MYSQL工程师】</span></strong>&nbsp;<a href=\"http://localhost/hdcms/html/kechengguanli/2014/115/176.html\" target=\"_blank\" title=\"\"><strong><span style=\"color: rgb(79, 129, 189);\">☆点击查看该阶段详细课程☆</span></strong></a></p><p>&nbsp; &nbsp; <span style=\"color: rgb(89, 89, 89); font-size: 14px;\">MySQL做为优秀的关系型数据库管理系统拥有安全、体积小、速度快、成本低、开放源码等良好的特性。通过这部份课程详细讲解MYSQL安装、配置、数据库与表创建的详细设置。MYSQL操作命令，高效SQL命令的编写，表管理，MYSQL函数，数据备份恢复操作，多表管理，事务，储存过程，触发器等等。还包括深度优化、索引优化、查询优化、存储优化、超大型数据量处理等后盾独家课程。</span></p><p><br/></p><hr/><p><strong><span style=\"color: rgb(255, 0, 0);\"><br/></span></strong></p><p><strong><span style=\"color: rgb(255, 0, 0);\">【第五阶段:PHP基础课程】</span></strong>&nbsp;<a href=\"http://localhost/hdcms/html/kechengguanli/2014/115/173.html\" target=\"_blank\" title=\"\"><strong><span style=\"color: rgb(79, 129, 189);\">☆点击查看该阶段详细课程☆</span></strong></a></p><p>&nbsp; &nbsp;<span style=\"color: rgb(89, 89, 89);\"><span style=\"color: rgb(89, 89, 89); font-size: 14px;\">PHP做为优秀的WEB开发语言，拥有其他语言也无可比拟的优势，支持几乎所有流行的数据库以及操作系统。通过基础部分的学习认真PHP，掌握PHP的基础语法，变量的使用，操作数组方式，PHP常量 ，运算符与表达式的学习，PHP语句结构的使用，时间与日期函数，高效的正则表达式及PHP面向对象的编程思想。</span></span></p><p><br/></p><hr/><p><strong><span style=\"color: rgb(255, 0, 0);\"><br/></span></strong></p><p><strong><span style=\"color: rgb(255, 0, 0);\">【第六阶段:PHP中级提高】</span></strong>&nbsp;<a href=\"http://localhost/hdcms/html/kechengguanli/2014/115/174.html\" target=\"_blank\" title=\"\"><strong><span style=\"color: rgb(79, 129, 189);\">☆点击查看该阶段详细课程☆</span></strong></a></p><p>&nbsp; &nbsp; <span style=\"color: rgb(89, 89, 89); font-size: 14px;\">掌握PHP文件与目录操作方法，制作完善的文件处理类，结合验证码、缩略图、图像处理类的学习熟练掌握PHP优秀简便的图像处理技术。学习PHP创建与修改XML，PHP处理会话状态及PHP的错误处理机制，自定义错误处理类的编写。</span></p><p><br/></p><hr/><p><strong><span style=\"color: rgb(255, 0, 0);\"><br/></span></strong></p><p><strong><span style=\"color: rgb(255, 0, 0);\">【第七阶段:PHP高级实例深入】</span></strong>&nbsp;<a href=\"http://localhost/hdcms/html/kechengguanli/2014/115/175.html\" target=\"_blank\" title=\"\"><strong><span style=\"color: rgb(79, 129, 189);\">☆点击查看该阶段详细课程☆</span></strong></a></p><p>&nbsp; &nbsp; <span style=\"color: rgb(89, 89, 89); font-size: 14px;\">学习通过PHP的几种操作数据库的方式，连接与操作数据库资源，发送安全的SQL语句，执行多条SQL语句及预处理语句，完成事务和调用存储过程。掌握数据库抽象层PDO的安装与使用，设计模式及SMARTY模版引擎学习，PHP开源框架产品HDPHP、ThinkPHP的学习，常用功能模块开发讲解 。实战分2步：一、讲师全程带领学习完成整站开发（后盾独有），二、学员独立完成项目整体设计到代码实现、测试运行的整个过程。还包括php缓存优化、页面静态技术、大型门户网站seo优化技术、web安全等后盾独家课程。</span></p><p><br/></p><hr/><p><strong><span style=\"color: rgb(255, 0, 0);\"><br/></span></strong></p><p><strong><span style=\"color: rgb(255, 0, 0);\">【第八阶段:大型PHP项目实战】</span></strong>&nbsp;<a href=\"http://localhost/hdcms/html/kechengguanli/2014/115/180.html\" target=\"_blank\" title=\"\"><strong><span style=\"color: rgb(79, 129, 189);\">☆点击查看该阶段详细课程☆</span></strong></a></p><p>&nbsp; &nbsp; <span style=\"color: rgb(89, 89, 89); font-size: 14px;\">PHP理论课所有培训机构都讲的差不多，而之所以只有后盾网能培养出企业真正需要的顶尖PHP工程师，原因就在于后盾始终站在学生的角度，一切只为学生利益最大化，重视实战项目培训，收费业内最低，培训项目均为商业运作项目，学习等于实习，毕业等就业。&nbsp;商城、微博、PHP框架、CMS系统、DEDECMS二次开发、ecshop商城二次开发……从前端页面到后台系统开发，完全由学员独立完成，拒绝分组，让学员的能力得到充分提升！后盾郑重承诺：决不培养滥竽充数的工程师！</span></p><p><br/></p>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('211','<p>&nbsp; &nbsp; 李晔是来自南方的同学，机械专业出身，但热衷于程序员工作，为了早日实现自己的心中的梦想，只身北上学习PHP开发。在学习中勤奋刻苦，感悟颇多，一起来听听他有什么好好的建议吧。</p><p><br/></p><p><embed type=\"application/x-shockwave-flash\" class=\"edui-faked-video\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" src=\"http://www.tudou.com/v/r4ZWNa_iflw/&rpid=321381373&resourceId=321381373_04_05_99/v.swf\" width=\"600\" height=\"365\" wmode=\"transparent\" play=\"true\" loop=\"false\" menu=\"false\" allowscriptaccess=\"never\" allowfullscreen=\"true\"/></p>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('214','<p>&nbsp; &nbsp; 张伟同学也是一名应届毕业生，自小热爱和科技相关的东西，后盾培训让他的生活有了巨大的改变，毕业后找到了一份满意的高薪工作。勤奋踏实是同学们对他的一致评价，希望他以后的路会越来越宽。</p><p><br/></p><p><embed type=\"application/x-shockwave-flash\" class=\"edui-faked-video\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" src=\"http://www.tudou.com/v/OPWf_lCNApg/&rpid=321381373&resourceId=321381373_04_05_99/v.swf\" width=\"600\" height=\"365\" wmode=\"transparent\" play=\"true\" loop=\"false\" menu=\"false\" allowscriptaccess=\"never\" allowfullscreen=\"true\"/></p>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('213','<p>&nbsp; &nbsp; 席磊同学是众多在后盾网成功跨行业转型的同学之一，大家可能想象不到，他之前有过十几年的美发造型工作经历。为了让自己更进一层，经朋友的介绍来到了后盾网参加培训，在后盾的培训经历也成为了他人生中一个重要的转折点。这位朴实的北京小伙在镜头前为我们谈了很多他的感悟。</p><p><br/></p><p><embed type=\"application/x-shockwave-flash\" class=\"edui-faked-video\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" src=\"http://www.tudou.com/v/MsWaMU3jPjU/&rpid=321381373&resourceId=321381373_04_05_99/v.swf\" width=\"600\" height=\"365\" wmode=\"transparent\" play=\"true\" loop=\"false\" menu=\"false\" allowscriptaccess=\"never\" allowfullscreen=\"true\"/></p>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('215','<p>&nbsp; &nbsp; 赵伟杰同学是给人的第一印象是沉稳、儒雅，长期的国学教育经历赋予了他这种独特的气质。年近40岁的他算是同学的老大哥，年龄也是很多想来参加后盾培训的同学非常纠结的一个问题，赵伟杰同学现身说法，用事实证明你年龄真的不是问题，如果你有一颗想学习的心和不放弃的精神，来后盾参加培训谁都可以成为大牛。</p><p><br/></p><p><embed type=\"application/x-shockwave-flash\" class=\"edui-faked-video\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" src=\"http://www.tudou.com/v/dBO1soGVvjI/&rpid=321381373&resourceId=321381373_04_05_99/v.swf\" width=\"600\" height=\"365\" wmode=\"transparent\" play=\"true\" loop=\"false\" menu=\"false\" allowscriptaccess=\"never\" allowfullscreen=\"true\"/></p>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('216','<p>&nbsp; &nbsp;&nbsp;李元哲同学是今年的大学应届毕业生，大四下学期来后盾网参加的培训，今年大学生就业困难是大家众所周知的事实，而李同学在毕业后便找到了试用期薪水7000的工作，完爆各路“学霸”，可喜可贺，一起来学学他的“必杀技”！</p><p><br/></p><p><embed type=\"application/x-shockwave-flash\" class=\"edui-faked-video\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" src=\"http://www.tudou.com/v/JyffyCIfQg8/&rpid=321381373&resourceId=321381373_04_05_99/v.swf\" width=\"600\" height=\"365\" wmode=\"transparent\" play=\"true\" loop=\"false\" menu=\"false\" allowscriptaccess=\"never\" allowfullscreen=\"true\"/></p>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('217','<p>sdf<br/></p>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('218','<p>12<br/></p>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('219','<p>dfsd<br/></p>')");
$db->exe("REPLACE INTO ".$db_prefix."content_data (`aid`,`content`) VALUES('220','<p>HP是一门功能强大，而且比较易学，容易上手的编程语言，学习PHP是没有年龄限制的，中国古话说得好，活到老学到老，只要是你有一颗想学习的心并愿意为
此付出努力，那么就一定可以学好的。而且，现在咨询这个问题认为自己年龄大的，一般也就是三四十岁，这个年纪正处于生活稳定期和事业的上升期，学一门新东
西对自己以后的发展会有很大的好处。在后盾网的学员中，三四十岁年龄段的同学大有人在，年龄并没有对学习产生任何负面影响，关键还是看个人的心态</p>')");
